<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='housing_price_index' inline='true' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='housing_price_index' name='textscan.1q86i1x1kftf9v176zpbz13zzyuj'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='housing_price_index.csv' password='' server='' />
          </named-connection>
          <named-connection caption='real_estate_prices' name='excel-direct.0w4uim30g2t5xe1a6rw1z1gndg0v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data/real_estate_prices.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='office_realestate_index' name='textscan.0329kgn0s8hc5i19395l317tav9m'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='office_realestate_index.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0w4uim30g2t5xe1a6rw1z1gndg0v' name='Aggregate' table='[Aggregate$]' type='table'>
          <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Composite_HPI' ordinal='1' />
            <column datatype='real' name='Single_Family_HPI' ordinal='2' />
            <column datatype='real' name='One_Storey_HPI' ordinal='3' />
            <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
            <column datatype='real' name='Townhouse_HPI' ordinal='5' />
            <column datatype='real' name='Apartment_HPI' ordinal='6' />
            <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
            <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
            <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
            <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
            <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
            <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1q86i1x1kftf9v176zpbz13zzyuj' name='housing_price_index.csv' table='[housing_price_index#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='measures' ordinal='2' />
              <column datatype='string' name='unit' ordinal='3' />
              <column datatype='real' name='index_value' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.0w4uim30g2t5xe1a6rw1z1gndg0v' name='Aggregate' table='[Aggregate$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M190:no:A1:M190:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measures]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>measures</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_value]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>index_value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Composite_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Composite_HPI</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Single_Family_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Single_Family_HPI</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[One_Storey_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>One_Storey_HPI</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Two_Storey_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Two_Storey_HPI</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Townhouse_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Townhouse_HPI</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Apartment_HPI</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Composite_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Composite_Benchmark</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Single_Family_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Single_Family_Benchmark</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[One_Storey_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>One_Storey_Benchmark</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Two_Storey_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Two_Storey_Benchmark</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Townhouse_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Townhouse_Benchmark</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apartment_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Apartment_Benchmark</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Apartment Benchmark' datatype='integer' name='[Apartment_Benchmark]' role='measure' type='quantitative' />
      <column caption='Apartment HPI' datatype='real' name='[Apartment_HPI]' role='measure' type='quantitative' />
      <column caption='Residential Percent Change' datatype='real' name='[Calculation_2121758391236153349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((AVG([Composite_Benchmark]) - LOOKUP(AVG([Composite_Benchmark]), FIRST())) / LOOKUP(AVG([Composite_Benchmark]),FIRST())) * 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Overall Index Percent Change' datatype='real' name='[Calculation_2121758391250436104]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
      <column caption='Composite HPI' datatype='real' name='[Composite_HPI]' role='measure' type='quantitative' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='One Storey Benchmark' datatype='integer' name='[One_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='One Storey HPI' datatype='real' name='[One_Storey_HPI]' role='measure' type='quantitative' />
      <column caption='Single Family Benchmark' datatype='integer' name='[Single_Family_Benchmark]' role='measure' type='quantitative' />
      <column caption='Single Family HPI' datatype='real' name='[Single_Family_HPI]' role='measure' type='quantitative' />
      <column caption='Townhouse Benchmark' datatype='integer' name='[Townhouse_Benchmark]' role='measure' type='quantitative' />
      <column caption='Townhouse HPI' datatype='real' name='[Townhouse_HPI]' role='measure' type='quantitative' />
      <column caption='Two Storey Benchmark' datatype='integer' name='[Two_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='Two Storey HPI' datatype='real' name='[Two_Storey_HPI]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Aggregate' datatype='table' name='[__tableau_internal_object_id__].[Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='housing_price_index.csv' datatype='table' name='[__tableau_internal_object_id__].[housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
      <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
      <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Composite_Benchmark]' derivation='Median' name='[med:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
      <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
      <column-instance column='[Composite_Benchmark]' derivation='Sum' name='[sum:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2121758391236153349]' derivation='User' name='[usr:Calculation_2121758391236153349:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_2121758391250436104]' derivation='User' name='[usr:Calculation_2121758391250436104:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.861915' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.138085' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:measures:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Contribution of indirect taxes to monthly growth rate of the Consumer Price Index (CPI)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Contribution of indirect taxes to annual growth rate of the Consumer Price Index (CPI)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Contribution of indirect taxes to monthly growth rate of the Consumer Price Index (CPI) excluding food and energy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Consumer Price Index (CPI) inversely weighted by volatility and is adjusted to exclude the effect of changes in indirect taxes (CPIW) (year-over-year percent change)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Contribution of indirect taxes to annual growth rate of the Consumer Price Index (CPI) excluding food and energy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.076hj7j159ej7314cvodg0hpseva].[usr:Calculation_2121758391277043721:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0abbpr00pnhzih162vugx10hzkmk].[sum:Calculation_2121758391391219728:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0abbpr00pnhzih162vugx10hzkmk].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[med:Composite_Benchmark:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[sum:Composite_Benchmark:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.076hj7j159ej7314cvodg0hpseva'>
        <column caption='Office Percent Change' datatype='real' name='[Calculation_2121758391277043721]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
        <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
        <column-instance column='[index_value]' derivation='Sum' name='[sum:index_value:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_2121758391277043721]' derivation='User' name='[usr:Calculation_2121758391277043721:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' />
        </column-instance>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
        <column caption='Regular Monthly Earnings' datatype='real' name='[Calculation_2121758391391219728]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Value]*4' />
        </column>
        <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
          <desc>
            <formatted-text>
              <run>Value</run>
            </formatted-text>
          </desc>
        </column>
        <column-instance column='[Calculation_2121758391391219728]' derivation='Sum' name='[sum:Calculation_2121758391391219728:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Aggregate' id='Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC'>
            <properties context=''>
              <relation connection='excel-direct.0w4uim30g2t5xe1a6rw1z1gndg0v' name='Aggregate' table='[Aggregate$]' type='table'>
                <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Composite_HPI' ordinal='1' />
                  <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                  <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                  <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                  <column datatype='real' name='Townhouse_HPI' ordinal='5' />
                  <column datatype='real' name='Apartment_HPI' ordinal='6' />
                  <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
                  <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
                  <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
                  <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
                  <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
                  <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='housing_price_index.csv' id='housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920'>
            <properties context=''>
              <relation connection='textscan.1q86i1x1kftf9v176zpbz13zzyuj' name='housing_price_index.csv' table='[housing_price_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='measures' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='real' name='index_value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[Date]' />
            </expression>
            <first-end-point object-id='housing_price_index.csv_C3A15DFEE9034ECAB39EA206AE7CB920' />
            <second-end-point object-id='Aggregate_77E4CD09AB5A4233A2A65C28586CB6DC' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='office_realestate_index' inline='true' name='federated.076hj7j159ej7314cvodg0hpseva' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='office_realestate_index' name='textscan.0a04je208zo2641gbdxdo1kkpvae'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='office_realestate_index.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0a04je208zo2641gbdxdo1kkpvae' name='office_realestate_index.csv' table='[office_realestate_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='string' name='property_type' ordinal='2' />
            <column datatype='string' name='baseline' ordinal='3' />
            <column datatype='real' name='index_value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0a04je208zo2641gbdxdo1kkpvae' name='office_realestate_index.csv' table='[office_realestate_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='string' name='property_type' ordinal='2' />
            <column datatype='string' name='baseline' ordinal='3' />
            <column datatype='real' name='index_value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>baseline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[baseline]</local-name>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias>baseline</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_value]</local-name>
            <parent-name>[office_realestate_index.csv]</parent-name>
            <remote-alias>index_value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Office Percent Change' datatype='real' name='[Calculation_2121758391277043721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='office_realestate_index.csv' datatype='table' name='[__tableau_internal_object_id__].[office_realestate_index.csv_56763E841BAD443C91CAABA3EEEAA6E5]' role='measure' type='quantitative' />
      <column caption='Baseline' datatype='string' name='[baseline]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.561247' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.438753' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='office_realestate_index.csv' id='office_realestate_index.csv_56763E841BAD443C91CAABA3EEEAA6E5'>
            <properties context=''>
              <relation connection='textscan.0a04je208zo2641gbdxdo1kkpvae' name='office_realestate_index.csv' table='[office_realestate_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='property_type' ordinal='2' />
                  <column datatype='string' name='baseline' ordinal='3' />
                  <column datatype='real' name='index_value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='real_estate_prices' inline='true' name='federated.0sif10h0o5m4cc1aiak640t5lfre' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='real_estate_prices' name='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data/real_estate_prices.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='Bancroft_and_Area+' type='union'>
          <columns header='yes'>
            <column datatype='date' name='Date' />
            <column datatype='real' name='Composite_HPI' />
            <column datatype='real' name='Single_Family_HPI' />
            <column datatype='real' name='One_Storey_HPI' />
            <column datatype='real' name='Two_Storey_HPI' />
            <column datatype='integer' name='Composite_Benchmark' />
            <column datatype='integer' name='Single_Family_Benchmark' />
            <column datatype='integer' name='One_Storey_Benchmark' />
            <column datatype='integer' name='Two_Storey_Benchmark' />
            <column datatype='real' name='Townhouse_HPI' />
            <column datatype='real' name='Apartment_HPI' />
            <column datatype='integer' name='Townhouse_Benchmark' />
            <column datatype='integer' name='Apartment_Benchmark' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Bancroft_and_Area' table='[Bancroft_and_Area$]' type='table'>
            <columns gridOrigin='A1:I190:no:A1:I190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='5' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='6' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='7' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Barrie_and_District' table='[Barrie_and_District$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Brantford_Region' table='[Brantford_Region$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Calgary' table='[Calgary$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='Bancroft_and_Area+' type='union'>
          <columns header='yes'>
            <column datatype='date' name='Date' />
            <column datatype='real' name='Composite_HPI' />
            <column datatype='real' name='Single_Family_HPI' />
            <column datatype='real' name='One_Storey_HPI' />
            <column datatype='real' name='Two_Storey_HPI' />
            <column datatype='integer' name='Composite_Benchmark' />
            <column datatype='integer' name='Single_Family_Benchmark' />
            <column datatype='integer' name='One_Storey_Benchmark' />
            <column datatype='integer' name='Two_Storey_Benchmark' />
            <column datatype='real' name='Townhouse_HPI' />
            <column datatype='real' name='Apartment_HPI' />
            <column datatype='integer' name='Townhouse_Benchmark' />
            <column datatype='integer' name='Apartment_Benchmark' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Bancroft_and_Area' table='[Bancroft_and_Area$]' type='table'>
            <columns gridOrigin='A1:I190:no:A1:I190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='5' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='6' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='7' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Barrie_and_District' table='[Barrie_and_District$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Brantford_Region' table='[Brantford_Region$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Calgary' table='[Calgary$]' type='table'>
            <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Composite_HPI' ordinal='1' />
              <column datatype='real' name='Single_Family_HPI' ordinal='2' />
              <column datatype='real' name='One_Storey_HPI' ordinal='3' />
              <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
              <column datatype='real' name='Townhouse_HPI' ordinal='5' />
              <column datatype='real' name='Apartment_HPI' ordinal='6' />
              <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
              <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
              <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
              <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
              <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
              <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Composite_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Composite_HPI</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Single_Family_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Single_Family_HPI</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[One_Storey_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>One_Storey_HPI</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Two_Storey_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Two_Storey_HPI</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Composite_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Composite_Benchmark</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Single_Family_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Single_Family_Benchmark</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[One_Storey_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>One_Storey_Benchmark</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Two_Storey_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Two_Storey_Benchmark</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Townhouse_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Townhouse_HPI</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment_HPI]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Apartment_HPI</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Townhouse_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Townhouse_Benchmark</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apartment_Benchmark]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Apartment_Benchmark</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RCA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Bancroft_and_Area+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RCA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Yearly Average' datatype='real' name='[Calculation_2121758391353499660]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(AVG([Composite_Benchmark]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference from Fixed Yearly Average' datatype='real' name='[Calculation_2121758391353671693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Composite_Benchmark]) - AVG([Calculation_2121758391357141006])' />
      </column>
      <column caption='Fixed Yearly Average' datatype='real' name='[Calculation_2121758391357141006]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date]): AVG([Composite_Benchmark]) }' />
      </column>
      <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
      <column caption='Composite HPI' datatype='real' name='[Composite_HPI]' role='measure' type='quantitative' />
      <column caption='One Storey Benchmark' datatype='integer' name='[One_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='One Storey HPI' datatype='real' name='[One_Storey_HPI]' role='measure' type='quantitative' />
      <column caption='Single Family Benchmark' datatype='integer' name='[Single_Family_Benchmark]' role='measure' type='quantitative' />
      <column caption='Single Family HPI' datatype='real' name='[Single_Family_HPI]' role='measure' type='quantitative' />
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Bancroft_and_Area&quot;' value='Bancroft' />
          <alias key='&quot;Barrie_and_District&quot;' value='Barrie' />
          <alias key='&quot;Brantford_Region&quot;' value='Brantford' />
        </aliases>
      </column>
      <column caption='Two Storey Benchmark' datatype='integer' name='[Two_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='Two Storey HPI' datatype='real' name='[Two_Storey_HPI]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Bancroft_and_Area' datatype='table' name='[__tableau_internal_object_id__].[Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Bancroft_and_Area' id='Bancroft!and!Area_432B9666EC2741E2A174C131DFB10B2B'>
            <properties context=''>
              <relation all='true' name='Bancroft_and_Area+' type='union'>
                <columns header='yes'>
                  <column datatype='date' name='Date' />
                  <column datatype='real' name='Composite_HPI' />
                  <column datatype='real' name='Single_Family_HPI' />
                  <column datatype='real' name='One_Storey_HPI' />
                  <column datatype='real' name='Two_Storey_HPI' />
                  <column datatype='integer' name='Composite_Benchmark' />
                  <column datatype='integer' name='Single_Family_Benchmark' />
                  <column datatype='integer' name='One_Storey_Benchmark' />
                  <column datatype='integer' name='Two_Storey_Benchmark' />
                  <column datatype='real' name='Townhouse_HPI' />
                  <column datatype='real' name='Apartment_HPI' />
                  <column datatype='integer' name='Townhouse_Benchmark' />
                  <column datatype='integer' name='Apartment_Benchmark' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Bancroft_and_Area' table='[Bancroft_and_Area$]' type='table'>
                  <columns gridOrigin='A1:I190:no:A1:I190:0' header='yes' outcome='6'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='real' name='Composite_HPI' ordinal='1' />
                    <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                    <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                    <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                    <column datatype='integer' name='Composite_Benchmark' ordinal='5' />
                    <column datatype='integer' name='Single_Family_Benchmark' ordinal='6' />
                    <column datatype='integer' name='One_Storey_Benchmark' ordinal='7' />
                    <column datatype='integer' name='Two_Storey_Benchmark' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Barrie_and_District' table='[Barrie_and_District$]' type='table'>
                  <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='real' name='Composite_HPI' ordinal='1' />
                    <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                    <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                    <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                    <column datatype='real' name='Townhouse_HPI' ordinal='5' />
                    <column datatype='real' name='Apartment_HPI' ordinal='6' />
                    <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
                    <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
                    <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
                    <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
                    <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
                    <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Brantford_Region' table='[Brantford_Region$]' type='table'>
                  <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='real' name='Composite_HPI' ordinal='1' />
                    <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                    <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                    <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                    <column datatype='real' name='Townhouse_HPI' ordinal='5' />
                    <column datatype='real' name='Apartment_HPI' ordinal='6' />
                    <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
                    <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
                    <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
                    <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
                    <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
                    <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1dg4ejg09h2jre1es98ra0zxbpec' name='Calgary' table='[Calgary$]' type='table'>
                  <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='real' name='Composite_HPI' ordinal='1' />
                    <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                    <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                    <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                    <column datatype='real' name='Townhouse_HPI' ordinal='5' />
                    <column datatype='real' name='Apartment_HPI' ordinal='6' />
                    <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
                    <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
                    <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
                    <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
                    <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
                    <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='weekly_earnings_updated' inline='true' name='federated.0abbpr00pnhzih162vugx10hzkmk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='weekly_earnings_updated' name='semistructpassivestore-direct.1g1obus1pek77g1cbpmll1e36qgc'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='weekly_earnings_updated.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[weekly_earnings_updated.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.1g1obus1pek77g1cbpmll1e36qgc' name='weekly_earnings_updated.json' table='[weekly_earnings_updated.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.1g1obus1pek77g1cbpmll1e36qgc' name='weekly_earnings_updated.json' table='[weekly_earnings_updated.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>Date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GeoID]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>GeoID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GeoName]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>GeoName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAICS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAICS]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>NAICS</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAICS Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAICS Description]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>NAICS Description</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[weekly_earnings_updated.json]</parent-name>
            <remote-alias>Value</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Monthly Earnings' datatype='real' name='[Calculation_2121758391381168143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Value])*4' />
      </column>
      <column caption='Regular Monthly Earnings' datatype='real' name='[Calculation_2121758391391219728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Value]*4' />
      </column>
      <column caption='Affordability' datatype='real' name='[Calculation_2121758391394115601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2121758391391219728])/AVG(([federated.0sif10h0o5m4cc1aiak640t5lfre].[Composite_Benchmark]))' />
      </column>
      <column caption='Earnings Adjusted for Inflation' datatype='real' name='[Calculation_2121758391397593106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG(([federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[index_value]))/SUM([Calculation_2121758391391219728]))*100' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Date</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Geo ID' datatype='string' name='[GeoID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>GeoID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>GeoName</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[NAICS Description]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>NAICS Description</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Naics' datatype='string' name='[NAICS]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>NAICS</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Value</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='weekly_earnings_updated.json' datatype='table' name='[__tableau_internal_object_id__].[weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2121758391391219728]' derivation='Sum' name='[sum:Calculation_2121758391391219728:qk]' pivot='key' type='quantitative' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Weekly Earnings Updated' role='dimensions'>
        <folder-item name='[Date]' type='field' />
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[GeoID]' type='field' />
        <folder-item name='[GeoName]' type='field' />
        <folder-item name='[NAICS Description]' type='field' />
        <folder-item name='[NAICS]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Weekly Earnings Updated'>
          <folder-item name='[Date]' type='field' />
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[GeoID]' type='field' />
          <folder-item name='[GeoName]' type='field' />
          <folder-item name='[NAICS Description]' type='field' />
          <folder-item name='[NAICS]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.926503' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0734967' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0abbpr00pnhzih162vugx10hzkmk].[sum:Calculation_2121758391391219728:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[sum:Composite_Benchmark:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd'>
        <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0sif10h0o5m4cc1aiak640t5lfre'>
        <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
        <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
        <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Composite_Benchmark]' derivation='Sum' name='[sum:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='weekly_earnings_updated.json' id='weekly_earnings_updated.json_B007093C54934DD7BCF56657A3D17061'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1g1obus1pek77g1cbpmll1e36qgc' name='weekly_earnings_updated.json' table='[weekly_earnings_updated.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='real_estate_prices (2)' inline='true' name='federated.0o66iyh0nodayz11mi95e10ar8uf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='real_estate_prices' name='excel-direct.1y4az4j1vobmxm1bwagpe116vdw8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data/real_estate_prices.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1y4az4j1vobmxm1bwagpe116vdw8' name='Aggregate' table='[Aggregate$]' type='table'>
          <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Composite_HPI' ordinal='1' />
            <column datatype='real' name='Single_Family_HPI' ordinal='2' />
            <column datatype='real' name='One_Storey_HPI' ordinal='3' />
            <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
            <column datatype='real' name='Townhouse_HPI' ordinal='5' />
            <column datatype='real' name='Apartment_HPI' ordinal='6' />
            <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
            <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
            <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
            <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
            <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
            <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1y4az4j1vobmxm1bwagpe116vdw8' name='Aggregate' table='[Aggregate$]' type='table'>
          <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Composite_HPI' ordinal='1' />
            <column datatype='real' name='Single_Family_HPI' ordinal='2' />
            <column datatype='real' name='One_Storey_HPI' ordinal='3' />
            <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
            <column datatype='real' name='Townhouse_HPI' ordinal='5' />
            <column datatype='real' name='Apartment_HPI' ordinal='6' />
            <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
            <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
            <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
            <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
            <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
            <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M190:no:A1:M190:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Composite_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Composite_HPI</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Single_Family_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Single_Family_HPI</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[One_Storey_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>One_Storey_HPI</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Two_Storey_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Two_Storey_HPI</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Townhouse_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Townhouse_HPI</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_HPI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment_HPI]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Apartment_HPI</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Composite_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Composite_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Composite_Benchmark</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Single_Family_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Single_Family_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Single_Family_Benchmark</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[One_Storey_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>One_Storey_Benchmark</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two_Storey_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Two_Storey_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Two_Storey_Benchmark</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Townhouse_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Townhouse_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Townhouse_Benchmark</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment_Benchmark</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apartment_Benchmark]</local-name>
            <parent-name>[Aggregate]</parent-name>
            <remote-alias>Apartment_Benchmark</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Apartment Benchmark' datatype='integer' name='[Apartment_Benchmark]' role='measure' type='quantitative' />
      <column caption='Apartment HPI' datatype='real' name='[Apartment_HPI]' role='measure' type='quantitative' />
      <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
      <column caption='Composite HPI' datatype='real' name='[Composite_HPI]' role='measure' type='quantitative' />
      <column caption='One Storey Benchmark' datatype='integer' name='[One_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='One Storey HPI' datatype='real' name='[One_Storey_HPI]' role='measure' type='quantitative' />
      <column caption='Single Family Benchmark' datatype='integer' name='[Single_Family_Benchmark]' role='measure' type='quantitative' />
      <column caption='Single Family HPI' datatype='real' name='[Single_Family_HPI]' role='measure' type='quantitative' />
      <column caption='Townhouse Benchmark' datatype='integer' name='[Townhouse_Benchmark]' role='measure' type='quantitative' />
      <column caption='Townhouse HPI' datatype='real' name='[Townhouse_HPI]' role='measure' type='quantitative' />
      <column caption='Two Storey Benchmark' datatype='integer' name='[Two_Storey_Benchmark]' role='measure' type='quantitative' />
      <column caption='Two Storey HPI' datatype='real' name='[Two_Storey_HPI]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Aggregate' datatype='table' name='[__tableau_internal_object_id__].[Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Aggregate' id='Aggregate_3C3920DAFF3E4EC2B2D8E6ED4AE085D5'>
            <properties context=''>
              <relation connection='excel-direct.1y4az4j1vobmxm1bwagpe116vdw8' name='Aggregate' table='[Aggregate$]' type='table'>
                <columns gridOrigin='A1:M190:no:A1:M190:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Composite_HPI' ordinal='1' />
                  <column datatype='real' name='Single_Family_HPI' ordinal='2' />
                  <column datatype='real' name='One_Storey_HPI' ordinal='3' />
                  <column datatype='real' name='Two_Storey_HPI' ordinal='4' />
                  <column datatype='real' name='Townhouse_HPI' ordinal='5' />
                  <column datatype='real' name='Apartment_HPI' ordinal='6' />
                  <column datatype='integer' name='Composite_Benchmark' ordinal='7' />
                  <column datatype='integer' name='Single_Family_Benchmark' ordinal='8' />
                  <column datatype='integer' name='One_Storey_Benchmark' ordinal='9' />
                  <column datatype='integer' name='Two_Storey_Benchmark' ordinal='10' />
                  <column datatype='integer' name='Townhouse_Benchmark' ordinal='11' />
                  <column datatype='integer' name='Apartment_Benchmark' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='real_estate_numbers' inline='true' name='federated.1ps98k51k3n5wx178sbtb0u7bgv8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='real_estate_numbers' name='textscan.0c7zn3b0hs9j6f1ak7tnd0jgyj6u'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='real_estate_numbers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0c7zn3b0hs9j6f1ak7tnd0jgyj6u' name='real_estate_numbers.csv' table='[real_estate_numbers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy' name='REF_DATE' ordinal='0' />
            <column datatype='string' name='GEO' ordinal='1' />
            <column datatype='string' name='DGUID' ordinal='2' />
            <column datatype='string' name='Housing estimates' ordinal='3' />
            <column datatype='string' name='Type of unit' ordinal='4' />
            <column datatype='string' name='UOM' ordinal='5' />
            <column datatype='integer' name='UOM_ID' ordinal='6' />
            <column datatype='string' name='SCALAR_FACTOR' ordinal='7' />
            <column datatype='integer' name='SCALAR_ID' ordinal='8' />
            <column datatype='string' name='VECTOR' ordinal='9' />
            <column datatype='date' name='COORDINATE' ordinal='10' />
            <column datatype='integer' name='VALUE' ordinal='11' />
            <column datatype='string' name='STATUS' ordinal='12' />
            <column datatype='string' name='SYMBOL' ordinal='13' />
            <column datatype='string' name='TERMINATED' ordinal='14' />
            <column datatype='integer' name='DECIMALS' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0c7zn3b0hs9j6f1ak7tnd0jgyj6u' name='real_estate_numbers.csv' table='[real_estate_numbers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy' name='REF_DATE' ordinal='0' />
            <column datatype='string' name='GEO' ordinal='1' />
            <column datatype='string' name='DGUID' ordinal='2' />
            <column datatype='string' name='Housing estimates' ordinal='3' />
            <column datatype='string' name='Type of unit' ordinal='4' />
            <column datatype='string' name='UOM' ordinal='5' />
            <column datatype='integer' name='UOM_ID' ordinal='6' />
            <column datatype='string' name='SCALAR_FACTOR' ordinal='7' />
            <column datatype='integer' name='SCALAR_ID' ordinal='8' />
            <column datatype='string' name='VECTOR' ordinal='9' />
            <column datatype='date' name='COORDINATE' ordinal='10' />
            <column datatype='integer' name='VALUE' ordinal='11' />
            <column datatype='string' name='STATUS' ordinal='12' />
            <column datatype='string' name='SYMBOL' ordinal='13' />
            <column datatype='string' name='TERMINATED' ordinal='14' />
            <column datatype='integer' name='DECIMALS' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REF_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[REF_DATE]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>REF_DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DGUID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DGUID]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>DGUID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Housing estimates</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Housing estimates]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>Housing estimates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of unit]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>Type of unit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UOM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UOM]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>UOM</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UOM_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UOM_ID]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>UOM_ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCALAR_FACTOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SCALAR_FACTOR]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>SCALAR_FACTOR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCALAR_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCALAR_ID]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>SCALAR_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VECTOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VECTOR]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>VECTOR</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COORDINATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[COORDINATE]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>COORDINATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATUS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATUS]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>STATUS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SYMBOL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SYMBOL]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>SYMBOL</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TERMINATED</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TERMINATED]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>TERMINATED</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECIMALS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DECIMALS]</local-name>
            <parent-name>[real_estate_numbers.csv]</parent-name>
            <remote-alias>DECIMALS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Coordinate' datatype='date' name='[COORDINATE]' role='dimension' type='ordinal' />
      <column caption='Decimals' datatype='integer' name='[DECIMALS]' role='measure' type='quantitative' />
      <column caption='Dguid' datatype='string' name='[DGUID]' role='dimension' type='nominal' />
      <column caption='Ref Date' datatype='date' name='[REF_DATE]' role='dimension' type='ordinal' />
      <column caption='Scalar Factor' datatype='string' name='[SCALAR_FACTOR]' role='dimension' type='nominal' />
      <column caption='Scalar Id' datatype='integer' name='[SCALAR_ID]' role='dimension' type='ordinal' />
      <column caption='Status' datatype='string' name='[STATUS]' role='dimension' type='nominal' />
      <column caption='Symbol' datatype='string' name='[SYMBOL]' role='dimension' type='nominal' />
      <column caption='Terminated' datatype='string' name='[TERMINATED]' role='dimension' type='nominal' />
      <column caption='Uom Id' datatype='integer' name='[UOM_ID]' role='dimension' type='ordinal' />
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative' />
      <column caption='Vector' datatype='string' name='[VECTOR]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='real_estate_numbers.csv' datatype='table' name='[__tableau_internal_object_id__].[real_estate_numbers.csv_0EF041EBBBC54A87A30481C97BA6639D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='real_estate_numbers.csv' id='real_estate_numbers.csv_0EF041EBBBC54A87A30481C97BA6639D'>
            <properties context=''>
              <relation connection='textscan.0c7zn3b0hs9j6f1ak7tnd0jgyj6u' name='real_estate_numbers.csv' table='[real_estate_numbers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' date-parse-format='yyyy' name='REF_DATE' ordinal='0' />
                  <column datatype='string' name='GEO' ordinal='1' />
                  <column datatype='string' name='DGUID' ordinal='2' />
                  <column datatype='string' name='Housing estimates' ordinal='3' />
                  <column datatype='string' name='Type of unit' ordinal='4' />
                  <column datatype='string' name='UOM' ordinal='5' />
                  <column datatype='integer' name='UOM_ID' ordinal='6' />
                  <column datatype='string' name='SCALAR_FACTOR' ordinal='7' />
                  <column datatype='integer' name='SCALAR_ID' ordinal='8' />
                  <column datatype='string' name='VECTOR' ordinal='9' />
                  <column datatype='date' name='COORDINATE' ordinal='10' />
                  <column datatype='integer' name='VALUE' ordinal='11' />
                  <column datatype='string' name='STATUS' ordinal='12' />
                  <column datatype='string' name='SYMBOL' ordinal='13' />
                  <column datatype='string' name='TERMINATED' ordinal='14' />
                  <column datatype='integer' name='DECIMALS' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='consumer_index' inline='true' name='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='consumer_index' name='textscan.1ig89du0c7bhx91g84pmq0sz6p7v'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='consumer_index.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ig89du0c7bhx91g84pmq0sz6p7v' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='string' name='measures' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='real' name='index_value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ig89du0c7bhx91g84pmq0sz6p7v' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='string' name='measures' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='real' name='index_value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measures]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>measures</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_value]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>index_value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='consumer_index.csv' datatype='table' name='[__tableau_internal_object_id__].[consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
      <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' value='CPI excluding 8 of the most volatile components and indirect taxes (CPIX)' />
          <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' value='CPI excluding food, energy and the effect of indirect taxes' />
          <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding food, energy and the effect of indirect taxes, seasonally adjusted' />
          <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' value='CPI excluding the effect of indirect taxes' />
          <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding the effect of indirect taxes, seasonally adjusted' />
        </aliases>
      </column>
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:measures:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='consumer_index.csv' id='consumer_index.csv_6594E60B0EB64F4EB6A86FE7B4A384F4'>
            <properties context=''>
              <relation connection='textscan.1ig89du0c7bhx91g84pmq0sz6p7v' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' date-parse-format='yyyy-MM' name='date' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='measures' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='real' name='index_value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='housing_price_index.csv+ (Multiple Connections)' inline='true' name='federated.13k96vd1wd0pw017z1ac701p3bz4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='housing_price_index' name='textscan.0f006by1i19vx91f5td461lo8nqt'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='housing_price_index.csv' password='' server='' />
          </named-connection>
          <named-connection caption='consumer_index' name='textscan.0xi1rba020l2gu0zvqpy01gj08ke'>
            <connection class='textscan' directory='C:/Users/Etinosa/lighthouse_projects/weekend_projects/tableau/Tableau-Project/data' filename='consumer_index.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xi1rba020l2gu0zvqpy01gj08ke' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='date' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='string' name='measures' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='real' name='index_value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0f006by1i19vx91f5td461lo8nqt' name='housing_price_index.csv' table='[housing_price_index#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='date' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='measures' ordinal='2' />
              <column datatype='string' name='unit' ordinal='3' />
              <column datatype='real' name='index_value' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0xi1rba020l2gu0zvqpy01gj08ke' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='date' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='measures' ordinal='2' />
              <column datatype='string' name='unit' ordinal='3' />
              <column datatype='real' name='index_value' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[date (consumer_index.csv)]' value='[consumer_index.csv].[date]' />
          <map key='[date]' value='[housing_price_index.csv].[date]' />
          <map key='[index_value (consumer_index.csv)]' value='[consumer_index.csv].[index_value]' />
          <map key='[index_value]' value='[housing_price_index.csv].[index_value]' />
          <map key='[measures (consumer_index.csv)]' value='[consumer_index.csv].[measures]' />
          <map key='[measures]' value='[housing_price_index.csv].[measures]' />
          <map key='[region (consumer_index.csv)]' value='[consumer_index.csv].[region]' />
          <map key='[region]' value='[housing_price_index.csv].[region]' />
          <map key='[unit (consumer_index.csv)]' value='[consumer_index.csv].[unit]' />
          <map key='[unit]' value='[housing_price_index.csv].[unit]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measures]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>measures</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_value]</local-name>
            <parent-name>[housing_price_index.csv]</parent-name>
            <remote-alias>index_value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date (consumer_index.csv)]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region (consumer_index.csv)]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measures (consumer_index.csv)]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>measures</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (consumer_index.csv)]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_value (consumer_index.csv)]</local-name>
            <parent-name>[consumer_index.csv]</parent-name>
            <remote-alias>index_value</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='consumer_index.csv' datatype='table' name='[__tableau_internal_object_id__].[consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='housing_price_index.csv' datatype='table' name='[__tableau_internal_object_id__].[housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E]' role='measure' type='quantitative' />
      <column caption='Date (Consumer Index.Csv)' datatype='string' name='[date (consumer_index.csv)]' role='dimension' type='nominal' />
      <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
      <column caption='Index Value (Consumer Index.Csv)' datatype='real' name='[index_value (consumer_index.csv)]' role='measure' type='quantitative' />
      <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
      <column caption='Measures (Consumer Index.Csv)' datatype='string' name='[measures (consumer_index.csv)]' role='dimension' type='nominal' />
      <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
      <column caption='Region (Consumer Index.Csv)' datatype='string' name='[region (consumer_index.csv)]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Unit (Consumer Index.Csv)' datatype='string' name='[unit (consumer_index.csv)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='consumer_index.csv' id='consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91'>
            <properties context=''>
              <relation connection='textscan.0xi1rba020l2gu0zvqpy01gj08ke' name='consumer_index.csv' table='[consumer_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='date' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='measures' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='real' name='index_value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='housing_price_index.csv' id='housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E'>
            <properties context=''>
              <relation connection='textscan.0f006by1i19vx91f5td461lo8nqt' name='housing_price_index.csv' table='[housing_price_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='date' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='measures' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='real' name='index_value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[date (consumer_index.csv)]' />
            </expression>
            <first-end-point object-id='housing_price_index.csv_385B3DF0423549DDBA74579E15F2A75E' />
            <second-end-point object-id='consumer_index.csv_2CE631C5B2E6453594C1BE546A93FF91' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>GeoName</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='ordinal' />
      <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1ps98k51k3n5wx178sbtb0u7bgv8'>
      <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
      <column caption='Ref Date' datatype='date' name='[REF_DATE]' role='dimension' type='ordinal' />
      <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
      <column-instance column='[REF_DATE]' derivation='None' name='[none:REF_DATE:nk]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0abbpr00pnhzih162vugx10hzkmk' target='federated.1ps98k51k3n5wx178sbtb0u7bgv8'>
      <column-mapping>
        <map key='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:nk]' value='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:REF_DATE:nk]' />
        <map key='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]' value='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:GEO:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.1ps98k51k3n5wx178sbtb0u7bgv8' target='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd'>
      <column-mapping>
        <map key='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:REF_DATE:nk]' value='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:date:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='District Price Differences'>
      <table>
        <view>
          <datasources>
            <datasource caption='real_estate_prices' name='federated.0sif10h0o5m4cc1aiak640t5lfre' />
          </datasources>
          <datasource-dependencies datasource='federated.0sif10h0o5m4cc1aiak640t5lfre'>
            <column caption='Difference from Fixed Yearly Average' datatype='real' name='[Calculation_2121758391353671693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Composite_Benchmark]) - AVG([Calculation_2121758391357141006])' />
            </column>
            <column caption='Fixed Yearly Average' datatype='real' name='[Calculation_2121758391357141006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date]): AVG([Composite_Benchmark]) }' />
            </column>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bancroft_and_Area&quot;' value='Bancroft' />
                <alias key='&quot;Barrie_and_District&quot;' value='Barrie' />
                <alias key='&quot;Brantford_Region&quot;' value='Brantford' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2121758391357141006]' derivation='Avg' name='[avg:Calculation_2121758391357141006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391353671693]' derivation='User' name='[usr:Calculation_2121758391353671693:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]' />
              <tooltip column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Calculation_2121758391357141006:qk]' />
              <tooltip column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0sif10h0o5m4cc1aiak640t5lfre].[usr:Calculation_2121758391353671693:qk]</rows>
        <cols>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{03744CE0-ED38-46FF-ACF2-DFAA669EE731}' />
    </worksheet>
    <worksheet name='EDA-House Prices'>
      <table>
        <view>
          <datasources>
            <datasource caption='real_estate_prices' name='federated.0sif10h0o5m4cc1aiak640t5lfre' />
          </datasources>
          <datasource-dependencies datasource='federated.0sif10h0o5m4cc1aiak640t5lfre'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='One Storey Benchmark' datatype='integer' name='[One_Storey_Benchmark]' role='measure' type='quantitative' />
            <column caption='Single Family Benchmark' datatype='integer' name='[Single_Family_Benchmark]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bancroft_and_Area&quot;' value='Bancroft' />
                <alias key='&quot;Barrie_and_District&quot;' value='Barrie' />
                <alias key='&quot;Brantford_Region&quot;' value='Brantford' />
              </aliases>
            </column>
            <column caption='Two Storey Benchmark' datatype='integer' name='[Two_Storey_Benchmark]' role='measure' type='quantitative' />
            <column-instance column='[One_Storey_Benchmark]' derivation='Avg' name='[avg:One_Storey_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Single_Family_Benchmark]' derivation='Avg' name='[avg:Single_Family_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Two_Storey_Benchmark]' derivation='Avg' name='[avg:Two_Storey_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]'>
            <groupfilter from='2005' function='range' level='[yr:Date:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:One_Storey_Benchmark:qk]' scope='rows' value='One Storey' />
            <format attr='title' class='0' field='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Two_Storey_Benchmark:qk]' scope='rows' value='Two Storey' />
            <format attr='title' class='0' field='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Single_Family_Benchmark:qk]' scope='rows' value='Single Family' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:One_Storey_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Two_Storey_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Single_Family_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:One_Storey_Benchmark:qk] + ([federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Two_Storey_Benchmark:qk] + [federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Single_Family_Benchmark:qk]))</rows>
        <cols>([federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk] * [federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:qk])</cols>
      </table>
      <simple-id uuid='{96765CAD-29C3-4DE0-BD30-6D43352AE86C}' />
    </worksheet>
    <worksheet name='EDA-Housing Constructions'>
      <table>
        <view>
          <datasources>
            <datasource caption='real_estate_numbers' name='federated.1ps98k51k3n5wx178sbtb0u7bgv8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ps98k51k3n5wx178sbtb0u7bgv8'>
            <column caption='Ref Date' datatype='date' name='[REF_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type of unit]' role='dimension' type='nominal' />
            <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative' />
            <column-instance column='[Type of unit]' derivation='None' name='[none:Type of unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REF_DATE]' derivation='Year-Trunc' name='[tyr:REF_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[tyr:REF_DATE:qk]' scope='cols' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:Type of unit:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</rows>
        <cols>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[tyr:REF_DATE:qk]</cols>
      </table>
      <simple-id uuid='{A750BAD0-29F1-4A0E-9401-4AA4E4616E89}' />
    </worksheet>
    <worksheet name='EDA-Office Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='office_realestate_index' name='federated.076hj7j159ej7314cvodg0hpseva' />
          </datasources>
          <datasource-dependencies datasource='federated.076hj7j159ej7314cvodg0hpseva'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.076hj7j159ej7314cvodg0hpseva].[none:property_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]</rows>
        <cols>[federated.076hj7j159ej7314cvodg0hpseva].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{E49488EE-077F-4725-BC8A-D72397096819}' />
    </worksheet>
    <worksheet name='EDA-Weekly Earnings'>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Value</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' scope='cols' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0abbpr00pnhzih162vugx10hzkmk].[avg:Value:qk]</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</cols>
      </table>
      <simple-id uuid='{00FF4176-F4AE-42FA-9B25-F92F078321D7}' />
    </worksheet>
    <worksheet name='HPI values'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Yearly Average House Price Index in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
          </datasources>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[tyr:date:qk]' field-type='quantitative' major-origin='#1979-08-15 20:56:45#' major-spacing='1.0' major-units='years' max='#2021-03-26 12:13:13#' min='#1978-06-12 19:36:56#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[tyr:date:qk]' scope='cols' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]</rows>
        <cols>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{8E62ACDF-C203-4E0E-8DAF-E22906FC059C}' />
    </worksheet>
    <worksheet name='HPI vs Benchmark'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trends in Canadian House Prices: by Index and Benchmark Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
          </datasources>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]' scope='rows' value='Avg. Benchmark Prices' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk] + [federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk])</rows>
        <cols>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{3ECD1698-B7A3-43F2-8378-19F32E2F5B69}' />
    </worksheet>
    <worksheet name='HPI vs Benchmark (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trends in Canadian House Prices: by Index and Benchmark Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
          </datasources>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column caption='Residential Percent Change' datatype='real' name='[Calculation_2121758391236153349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([Composite_Benchmark]) - LOOKUP(AVG([Composite_Benchmark]), FIRST())) / LOOKUP(AVG([Composite_Benchmark]),FIRST())) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Overall Index Percent Change' datatype='real' name='[Calculation_2121758391250436104]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391236153349]' derivation='User' name='[usr:Calculation_2121758391236153349:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2121758391250436104]' derivation='User' name='[usr:Calculation_2121758391250436104:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]'>
            <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk] + [federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk])</rows>
        <cols>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{F7446BAA-AC2C-4EBC-9AF5-03DC80EDBAF1}' />
    </worksheet>
    <worksheet name='HPI vs Benchmark (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trends in Canadian Real Estate Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
            <datasource caption='office_realestate_index' name='federated.076hj7j159ej7314cvodg0hpseva' />
          </datasources>
          <datasource-dependencies datasource='federated.076hj7j159ej7314cvodg0hpseva'>
            <column caption='Office Percent Change' datatype='real' name='[Calculation_2121758391277043721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2121758391277043721]' derivation='User' name='[usr:Calculation_2121758391277043721:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column caption='Residential Percent Change' datatype='real' name='[Calculation_2121758391236153349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([Composite_Benchmark]) - LOOKUP(AVG([Composite_Benchmark]), FIRST())) / LOOKUP(AVG([Composite_Benchmark]),FIRST())) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Overall Index Percent Change' datatype='real' name='[Calculation_2121758391250436104]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([index_value]) - LOOKUP(AVG([index_value]), FIRST())) / LOOKUP(AVG([index_value]),FIRST())) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391236153349]' derivation='User' name='[usr:Calculation_2121758391236153349:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2121758391250436104]' derivation='User' name='[usr:Calculation_2121758391250436104:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.076hj7j159ej7314cvodg0hpseva].[usr:Calculation_2121758391277043721:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.076hj7j159ej7314cvodg0hpseva].[usr:Calculation_2121758391277043721:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]&quot;</bucket>
              <bucket>&quot;[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]&quot;</bucket>
              <bucket>&quot;[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]'>
            <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]</column>
            <column>[federated.076hj7j159ej7314cvodg0hpseva].[usr:Calculation_2121758391277043721:qk]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391236153349:qk]</column>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[usr:Calculation_2121758391250436104:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[Multiple Values]' scope='rows' value='Percent Change' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[Multiple Values]</rows>
        <cols>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{4B3A3B8A-885C-4600-8DA2-C55664307716}' />
    </worksheet>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average House Prices Per City Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='real_estate_prices' name='federated.0sif10h0o5m4cc1aiak640t5lfre' />
          </datasources>
          <datasource-dependencies datasource='federated.0sif10h0o5m4cc1aiak640t5lfre'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bancroft_and_Area&quot;' value='Bancroft' />
                <alias key='&quot;Barrie_and_District&quot;' value='Barrie' />
                <alias key='&quot;Brantford_Region&quot;' value='Brantford' />
              </aliases>
            </column>
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' num-steps='8' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' />
              <tooltip column='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]</rows>
        <cols>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{A3FB1F2F-9585-4812-A6FC-DB3B1BF3D0DD}' />
    </worksheet>
    <worksheet name='House Prices vs Earnings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trends in Average Monthly Earnings and Housing Prices in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column caption='Monthly Earnings' datatype='real' name='[Calculation_2121758391381168143]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Value])*4' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Value</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391381168143]' derivation='User' name='[usr:Calculation_2121758391381168143:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]' included-values='in-range'>
            <min>#2005-01-01#</min>
            <max>#2020-09-01#</max>
          </filter>
          <slices>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]' scope='rows' value='Avg. Benchmark Prices' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0abbpr00pnhzih162vugx10hzkmk].[avg:Value:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391381168143:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]' />
              <tooltip column='[federated.0abbpr00pnhzih162vugx10hzkmk].[avg:Value:qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0abbpr00pnhzih162vugx10hzkmk].[avg:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391381168143:qk] + [federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:Composite_Benchmark:qk])</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{09B33323-0EB7-4360-B071-BBD65914280B}' />
    </worksheet>
    <worksheet name='House Prices vs Earnings (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trends in Housing Affordability in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
            <datasource caption='real_estate_prices' name='federated.0sif10h0o5m4cc1aiak640t5lfre' />
          </datasources>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column caption='Regular Monthly Earnings' datatype='real' name='[Calculation_2121758391391219728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Value]*4' />
            </column>
            <column caption='Affordability' datatype='real' name='[Calculation_2121758391394115601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2121758391391219728])/AVG(([federated.0sif10h0o5m4cc1aiak640t5lfre].[Composite_Benchmark]))' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Value</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391394115601]' derivation='User' name='[usr:Calculation_2121758391394115601:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0sif10h0o5m4cc1aiak640t5lfre'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]' included-values='in-range'>
            <min>#2001-01-01#</min>
            <max>#2023-08-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]'>
            <groupfilter function='member' level='[none:GeoName:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391394115601:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</column>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</column>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391394115601:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391394115601:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391394115601:qk]' scope='rows' value='Income/Housing Cost' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0abbpr00pnhzih162vugx10hzkmk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391394115601:qk]</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{F3E5496B-EFDA-436C-AE01-F191CD976583}' />
    </worksheet>
    <worksheet name='House Prices vs Earnings (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effect of Inflation on Earnings in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
            <datasource caption='consumer_index' name='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd' />
          </datasources>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column caption='Regular Monthly Earnings' datatype='real' name='[Calculation_2121758391391219728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Value]*4' />
            </column>
            <column caption='Earnings Adjusted for Inflation' datatype='real' name='[Calculation_2121758391397593106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG(([federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[index_value]))/SUM([Calculation_2121758391391219728]))*100' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Weekly Earnings' datatype='real' name='[Value]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Value</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2121758391397593106]' derivation='User' name='[usr:Calculation_2121758391397593106:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd'>
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' value='CPI excluding 8 of the most volatile components and indirect taxes (CPIX)' />
                <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' value='CPI excluding food, energy and the effect of indirect taxes' />
                <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding food, energy and the effect of indirect taxes, seasonally adjusted' />
                <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' value='CPI excluding the effect of indirect taxes' />
                <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding the effect of indirect taxes, seasonally adjusted' />
              </aliases>
            </column>
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]' included-values='in-range'>
            <min>#2001-01-01#</min>
            <max>#2023-08-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]'>
            <groupfilter function='member' level='[none:GeoName:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</column>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</column>
            <column>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391397593106:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0abbpr00pnhzih162vugx10hzkmk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0abbpr00pnhzih162vugx10hzkmk].[usr:Calculation_2121758391397593106:qk]</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</cols>
      </table>
      <simple-id uuid='{865E43DC-E519-4CD8-A57C-880C15E4FD40}' />
    </worksheet>
    <worksheet name='Notable Events - Earnings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effects of Notable Events on  Office and Housing Prices in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
            <datasource caption='office_realestate_index' name='federated.076hj7j159ej7314cvodg0hpseva' />
            <datasource caption='real_estate_prices (2)' name='federated.0o66iyh0nodayz11mi95e10ar8uf' />
          </datasources>
          <datasource-dependencies datasource='federated.076hj7j159ej7314cvodg0hpseva'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column-instance column='[index_value]' derivation='Sum' name='[sum:index_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o66iyh0nodayz11mi95e10ar8uf'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]'>
            <groupfilter function='member' level='[none:GeoName:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]'>
            <groupfilter from='2001' function='range' level='[yr:Date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</column>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]' scope='rows' value='Office Price Index' />
            <format attr='title' class='0' field='[federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk]' scope='rows' value='House Benchmark Price' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value='2007' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value='2009' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='automatic' paired-id='refline5' scope='per-pane' symmetric='false' value='2000' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='4' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='automatic' paired-id='refline4' scope='per-pane' symmetric='false' value='2002' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='4' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk] + [federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk])</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</cols>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-2'>
            <formatted-text>
              <run>Financial Crises</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2006.9069973427813'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='104665.18449438197'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2009.0115146147032'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='51104.127640449406'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.501166' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-28'>
            <formatted-text>
              <run>Dot Com&#10;Bubble</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.9344552701505'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='68794.017977528056'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2002.1240035429585'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='19164.047865168523'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.49505' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Dotcom&#10;Bubble</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.9368421052632'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='81.328906835205956'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2002.0631578947368'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='23.886811797752788'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='5' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Financial&#10;Crises</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2006.9684210526316'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='92.703579119850133'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2009.1578947368421'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='35.830217696629184'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{91747326-D857-4AFB-8008-968F65A321A7}' />
    </worksheet>
    <worksheet name='Notable Events - Earnings (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effects of Notable Events on  Office and Housing Prices in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weekly_earnings_updated' name='federated.0abbpr00pnhzih162vugx10hzkmk' />
            <datasource caption='office_realestate_index' name='federated.076hj7j159ej7314cvodg0hpseva' />
            <datasource caption='real_estate_prices (2)' name='federated.0o66iyh0nodayz11mi95e10ar8uf' />
          </datasources>
          <datasource-dependencies datasource='federated.076hj7j159ej7314cvodg0hpseva'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column-instance column='[index_value]' derivation='Sum' name='[sum:index_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0abbpr00pnhzih162vugx10hzkmk'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>GeoName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o66iyh0nodayz11mi95e10ar8uf'>
            <column caption='Composite Benchmark' datatype='integer' name='[Composite_Benchmark]' role='measure' type='quantitative' />
            <column-instance column='[Composite_Benchmark]' derivation='Avg' name='[avg:Composite_Benchmark:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]'>
            <groupfilter function='member' level='[none:GeoName:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]'>
            <groupfilter from='2001' function='range' level='[yr:Date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</column>
            <column>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]' scope='rows' value='Office Price Index' />
            <format attr='title' class='0' field='[federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk]' scope='rows' value='House Benchmark Price' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value='2007' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value='2009' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='automatic' paired-id='refline5' scope='per-pane' symmetric='false' value='2000' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='4' />
            <reference-line axis-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='automatic' paired-id='refline4' scope='per-pane' symmetric='false' value='2002' value-column='[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]' z-order='4' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.076hj7j159ej7314cvodg0hpseva].[avg:index_value:qk] + [federated.0o66iyh0nodayz11mi95e10ar8uf].[avg:Composite_Benchmark:qk])</rows>
        <cols>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</cols>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-2'>
            <formatted-text>
              <run>Financial Crises</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2006.9069973427813'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='104665.18449438197'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2009.0115146147032'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='51104.127640449406'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.501166' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-28'>
            <formatted-text>
              <run>Dot Com&#10;Bubble</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.9344552701505'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='68794.017977528056'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2002.1240035429585'>
                  <node-reference>
                    <axis>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='19164.047865168523'>
                  <node-reference>
                    <axis>[federated.076hj7j159ej7314cvodg0hpseva].[sum:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.49505' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0972B584-1F22-4E24-BCF7-A57CE17C3272}' />
    </worksheet>
    <worksheet name='Notable Events - Housing Starts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effects of Notable Events on  Housing Construction in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='real_estate_numbers' name='federated.1ps98k51k3n5wx178sbtb0u7bgv8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ps98k51k3n5wx178sbtb0u7bgv8'>
            <column caption='Ref Date' datatype='date' name='[REF_DATE]' role='dimension' type='ordinal' />
            <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REF_DATE]' derivation='Year' name='[yr:REF_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[REF_DATE]' derivation='Year' name='[yr:REF_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:ok]'>
            <groupfilter from='1980' function='range' level='[yr:REF_DATE:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]' scope='rows' value='Housing Starts' />
            <format attr='title' class='0' field='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-color' id='annotation_0' value='#e15759' />
            <format attr='border-color' id='annotation_0' value='#e15759' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_1' value='#e15759' />
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='stroke-color' id='annotation_1' value='#e15759' />
            <format attr='line-end' id='annotation_1' value='arrow' />
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='border-color' id='annotation_2' value='#e15759' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='stroke-color' id='annotation_2' value='#e15759' />
            <format attr='line-end' id='annotation_2' value='arrow' />
            <format attr='border-color' id='annotation_3' value='#e15759' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='stroke-color' id='annotation_3' value='#e15759' />
            <format attr='line-end' id='annotation_3' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' paired-id='refline1' scope='per-pane' symmetric='false' value='2000' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value='2002' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' paired-id='refline3' scope='per-pane' symmetric='false' value='2007' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='2' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' paired-id='refline2' scope='per-pane' symmetric='false' value='2009' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='2' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='automatic' scope='per-pane' value='1987' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='3' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='none' paired-id='refline6' scope='per-pane' symmetric='false' value='1990' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='4' />
            <reference-line axis-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label-type='automatic' paired-id='refline5' scope='per-pane' symmetric='false' value='1991' value-column='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</rows>
        <cols>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Financial Crises</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2008.2488928255093'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1790537.5255591054'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='128' y='87' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='108'>
            <formatted-text>
              <run bold='true'>DotCom&#10;Bubble</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2000.7555358724535'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1559701.6773162938'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='95' y='115' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='121'>
            <formatted-text>
              <run bold='true'>Recession</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1990.3923826395039'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1372537.4760383386'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='99' y='70' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='104'>
            <formatted-text>
              <run bold='true' fontalignment='1'>Black&#10;Monday</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1986.8848538529671'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2876089.892971246'>
                  <node-reference>
                    <axis>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[sum:VALUE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-138' y='-48' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{780A18F8-3269-4133-A876-BB949854D7B8}' />
    </worksheet>
    <worksheet name='Notable Events - Housing Starts (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effects of Notable Events on  Inflation Measures in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='consumer_index' name='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd' />
          </datasources>
          <datasource-dependencies datasource='federated.0dv4tkw0fgrj0n17vzkpu0uvobsd'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' value='CPI excluding 8 of the most volatile components and indirect taxes (CPIX)' />
                <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' value='CPI excluding food, energy and the effect of indirect taxes' />
                <alias key='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding food, energy and the effect of indirect taxes, seasonally adjusted' />
                <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' value='CPI excluding the effect of indirect taxes' />
                <alias key='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' value='CPI excluding the effect of indirect taxes, seasonally adjusted' />
              </aliases>
            </column>
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]' value='Inflation Measures' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-color' id='annotation_0' value='#e15759' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='stroke-color' id='annotation_0' value='#e15759' />
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='border-color' id='annotation_1' value='#e15759' />
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='stroke-color' id='annotation_1' value='#e15759' />
            <format attr='line-end' id='annotation_1' value='arrow' />
            <format attr='border-color' id='annotation_2' value='#e15759' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='stroke-color' id='annotation_2' value='#e15759' />
            <format attr='line-end' id='annotation_2' value='arrow' />
            <format attr='border-color' id='annotation_3' value='#e15759' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='stroke-color' id='annotation_3' value='#e15759' />
            <format attr='line-end' id='annotation_3' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' paired-id='refline1' scope='per-pane' symmetric='false' value='2007' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value='2009' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' paired-id='refline3' scope='per-pane' symmetric='false' value='2000' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='2' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' paired-id='refline2' scope='per-pane' symmetric='false' value='2002' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='2' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='none' paired-id='refline5' scope='per-pane' symmetric='false' value='1990' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='automatic' paired-id='refline4' scope='per-pane' symmetric='false' value='1991' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label-type='automatic' scope='per-pane' value='1987' value-column='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]</rows>
        <cols>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='131'>
            <formatted-text>
              <run bold='true'>Financial&#10; Crises</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2007.5745164960183'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='106.91187265917603'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='141' y='83' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='104'>
            <formatted-text>
              <run bold='true'>DotCom&#10;Bubble</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2000.7940841865757'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='100.39251872659176'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='80' y='88' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='122'>
            <formatted-text>
              <run bold='true'>Recession</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1990.5551763367464'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='99.254218833600859'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='95' y='115' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='104'>
            <formatted-text>
              <run bold='true'>Black&#10;Monday</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1987.0967007963595'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='104.01438202247191'>
                  <node-reference>
                    <axis>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[avg:index_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-53' y='-212' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{728C5B3C-6E0B-4417-BD95-F9DD06E2B74A}' />
    </worksheet>
    <worksheet name='Regression'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relationship Between Consumer Price Index and Housing Price Index in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index.csv+ (Multiple Connections)' name='federated.13k96vd1wd0pw017z1ac701p3bz4' />
          </datasources>
          <datasource-dependencies datasource='federated.13k96vd1wd0pw017z1ac701p3bz4'>
            <column-instance column='[index_value (consumer_index.csv)]' derivation='Avg' name='[avg:index_value (consumer_index.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column caption='Index Value (Consumer Index.Csv)' datatype='real' name='[index_value (consumer_index.csv)]' role='measure' type='quantitative' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures (Consumer Index.Csv)' datatype='string' name='[measures (consumer_index.csv)]' role='dimension' type='nominal' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[measures (consumer_index.csv)]' derivation='None' name='[none:measures (consumer_index.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures (consumer_index.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:measures (consumer_index.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:measures (consumer_index.csv):nk]' member='&quot;Consumer Price Index (CPI) inversely weighted by volatility and is adjusted to exclude the effect of changes in indirect taxes (CPIW) (year-over-year percent change)&quot;' />
                <groupfilter function='member' level='[none:measures (consumer_index.csv):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures:nk]</column>
            <column>[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures (consumer_index.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13k96vd1wd0pw017z1ac701p3bz4].[avg:index_value (consumer_index.csv):qk]' scope='rows' value='Consumer Price Index' />
            <format attr='title' class='0' field='[federated.13k96vd1wd0pw017z1ac701p3bz4].[avg:index_value:qk]' scope='cols' value='Housing Price Index' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:date:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.13k96vd1wd0pw017z1ac701p3bz4].[avg:index_value (consumer_index.csv):qk]</rows>
        <cols>[federated.13k96vd1wd0pw017z1ac701p3bz4].[avg:index_value:qk]</cols>
      </table>
      <simple-id uuid='{D267976C-52CA-4D4B-AC54-0C0D4F449A11}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_price_index' name='federated.1fzkh9d0asfskn116rkcv0ejg6g7' />
          </datasources>
          <datasource-dependencies datasource='federated.1fzkh9d0asfskn116rkcv0ejg6g7'>
            <column-instance column='[index_value]' derivation='Avg' name='[avg:index_value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Index Value' datatype='real' name='[index_value]' role='measure' type='quantitative' />
            <column caption='Measures' datatype='string' name='[measures]' role='dimension' type='nominal' />
            <column-instance column='[measures]' derivation='None' name='[none:measures:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding 8 of the most volatile components and indirect taxes (CPIX)&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding food, energy and the effect of indirect taxes, seasonally adjusted&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes&quot;' />
              <groupfilter function='member' level='[none:measures:nk]' member='&quot;Consumer Price Index (CPI) excluding the effect of indirect taxes, seasonally adjusted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[avg:index_value:qk]</rows>
        <cols>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{0F182AD0-633B-479E-9A37-E0FD6ED1AD6D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Insights' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Insights on Canadian Real Estate Prices and Affordability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='468' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98178' id='1' param='vert' removable='false' type-v2='layout-flow' w='98898' x='551' y='911'>
            <zone h='5695' id='3' type-v2='title' w='98898' x='551' y='911' />
            <zone fixed-size='109' h='12415' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98898' x='551' y='6606' />
            <zone h='80068' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98898' x='551' y='19021'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Interesting to note that the colder Northern provinces have higher average weekly earnings&#10;' captured-sheet='EDA-Weekly Earnings' id='1'>
                    <capturedDeltas>
                      <worksheet name='EDA-Weekly Earnings'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' domain-expand='false' field='[federated.0abbpr00pnhzih162vugx10hzkmk].[avg:Value:qk]' field-type='quantitative' scope='rows' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Residential house prices have been accelerating faster in comparison to the overall index and to office prices&#10;' captured-sheet='HPI vs Benchmark (3)' id='2' />
                  <story-point caption='House prices in Calgary have been consistently more expensive than in Bancroft' captured-sheet='Heatmap' id='3' />
                  <story-point caption='Recently, the price differences between the cities have been decreasing as prices in Bancroft and Brantford catch up to the average&#10;' captured-sheet='District Price Differences' id='4' />
                  <story-point caption='House prices are increasingly becoming more unaffordable&#10;&#10;' captured-sheet='House Prices vs Earnings (2)' id='5' />
                  <story-point caption='Recessions that affect the broader economy lead to reduction in housing starts&#10;&#10;&#10;' captured-sheet='Notable Events - Housing Starts' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BFB47518-89D5-43EF-B8E5-9793B2D28FDE}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Notable Events'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='98858' x='571' y='1000'>
              <zone h='98000' id='3' name='Notable Events - Housing Starts' w='98858' x='571' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Notable Events - Housing Starts' w='98858' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{49ACFABA-F103-49D6-9C14-7C7A23F1D725}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Trends'>
      <style />
      <size maxheight='824' maxwidth='1400' minheight='824' minwidth='1400' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98058' id='5' param='horz' type-v2='layout-flow' w='98858' x='571' y='971'>
            <zone h='98058' id='3' type-v2='layout-basic' w='83715' x='571' y='971'>
              <zone h='49029' id='1' name='Heatmap' w='83715' x='571' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49029' id='7' name='HPI vs Benchmark (3)' w='41858' x='571' y='971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49029' id='9' name='House Prices vs Earnings (2)' w='41857' x='42429' y='971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='212' h='98058' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='15143' x='84286' y='971'>
              <zone h='9830' id='6' name='Heatmap' pane-specification-id='0' param='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' type-v2='color' w='15143' x='84286' y='971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12257' id='8' name='HPI vs Benchmark (3)' pane-specification-id='2' param='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' type-v2='color' w='27900' x='9200' y='15534' />
      </zones>
      <simple-id uuid='{A55D4814-9955-49C4-91B8-A4EE11DB69A2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='261'>
    <window class='worksheet' name='HPI values'>
      <cards>
        <edge name='left'>
          <strip size='117'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:date:nk]</field>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{41F10944-095A-43ED-8755-9D2D094BB9F0}' />
    </window>
    <window class='worksheet' name='HPI vs Benchmark'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='260'>
            <card pane-specification-id='1' param='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</field>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64DA4235-216D-49FB-AED7-CA5D7F583514}' />
    </window>
    <window class='worksheet' name='HPI vs Benchmark (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='226'>
            <card pane-specification-id='4' param='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]</field>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</field>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37C41BBB-C5BB-4341-BC21-C0B293CAD134}' />
    </window>
    <window class='worksheet' name='HPI vs Benchmark (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card pane-specification-id='2' param='[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[none:measures:nk]</field>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B239E2A-F552-4837-870B-81C92EE40539}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fzkh9d0asfskn116rkcv0ejg6g7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{169D926A-B382-4560-9F77-5FEC9851C3DF}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0sif10h0o5m4cc1aiak640t5lfre].[avg:Composite_Benchmark:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[mn:Date:ok]</field>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Date:qk]</field>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]</field>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C194FD5-0B0D-4D8B-865D-D664AFED9110}' />
    </window>
    <window class='worksheet' name='District Price Differences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]</field>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7F12B669-56EA-4E5A-B5FF-2C42D3855EB5}' />
    </window>
    <window class='worksheet' name='House Prices vs Earnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E24A89B-93EE-4C4A-82AA-58B59CEE7DAA}' />
    </window>
    <window class='worksheet' name='House Prices vs Earnings (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AD1335AD-3C26-4C7C-8437-A16394516480}' />
    </window>
    <window class='worksheet' name='House Prices vs Earnings (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:Date:qk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
            <field>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9AB67373-C014-4602-811E-EDD6B03ABFFB}' />
    </window>
    <window class='worksheet' name='Notable Events - Earnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C74B34B9-C64A-45EA-B8C6-8ACDCE15FAD8}' />
    </window>
    <window class='worksheet' name='Notable Events - Earnings (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{02755519-A82A-48EB-9444-192B724E63D9}' />
    </window>
    <window class='worksheet' name='Notable Events - Housing Starts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{68118256-0A66-48F4-BC68-D5D49B660234}' />
    </window>
    <window class='worksheet' name='Notable Events - Housing Starts (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='181'>
            <card pane-specification-id='0' param='[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[none:measures:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0dv4tkw0fgrj0n17vzkpu0uvobsd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D1690095-8F6E-4402-B320-4E6DAA5BC544}' />
    </window>
    <window class='worksheet' name='Regression'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:date:nk]</field>
            <field>[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures (consumer_index.csv):nk]</field>
            <field>[federated.13k96vd1wd0pw017z1ac701p3bz4].[none:measures:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BE6365F3-6726-4A2F-BBCC-EBF2E25DAE05}' />
    </window>
    <window class='worksheet' name='EDA-Weekly Earnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68CB158E-50AB-4077-9E1C-6587355962F1}' />
    </window>
    <window class='worksheet' name='EDA-Housing Constructions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:Type of unit:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[none:GeoName:nk]</field>
            <field>[federated.0abbpr00pnhzih162vugx10hzkmk].[yr:Date:ok]</field>
            <field>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[none:Type of unit:nk]</field>
            <field>[federated.1ps98k51k3n5wx178sbtb0u7bgv8].[yr:REF_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C45CF73F-B8AD-4A6A-8B34-89308A35517F}' />
    </window>
    <window class='worksheet' name='EDA-House Prices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[none:Table Name:nk]</field>
            <field>[federated.0sif10h0o5m4cc1aiak640t5lfre].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3242D527-4903-4B37-83CD-E9BD8474A46C}' />
    </window>
    <window class='worksheet' name='EDA-Office Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.076hj7j159ej7314cvodg0hpseva].[none:property_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.076hj7j159ej7314cvodg0hpseva].[none:property_type:nk]</field>
            <field>[federated.076hj7j159ej7314cvodg0hpseva].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5E119318-95F4-41E1-A160-D43E960779C5}' />
    </window>
    <window class='dashboard' name='Trends'>
      <viewpoints>
        <viewpoint name='HPI vs Benchmark (3)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='House Prices vs Earnings (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{1FF0940F-242E-43D7-BFE6-DC975DF5FB26}' />
    </window>
    <window class='dashboard' name='Notable Events'>
      <viewpoints>
        <viewpoint name='Notable Events - Housing Starts'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{662F474B-552B-4621-8123-2CC462969024}' />
    </window>
    <window class='dashboard' maximized='true' name='Insights'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{D10DF262-563A-460F-9A02-9715373FB1F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='District Price Differences' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='EDA-House Prices' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d5Rc133n+Xmvcq7q6pwTuhEaGUwASFACRVIBooIDKcsSNbZkH5+xPXN2
      PWd39g9qvT4+6zN7ZnZsrz0rebyUNBZlmaJkihQlkhJzRkbnHCt05Rzfu/tHA01QRIMgUV3d
      DbzPOWQ3qqve/d1b9/vevb977+8nCSEEGho3KfJGG6ChsZFUTQDpdLpaRWloXDNVE4CiKNUq
      SmODKeUSfPuv/xOP/O9/wS/fPLf6emLuDE+9PgJAaOwNnnx16L0fLKT4/uM/hVKcF189UxVb
      9VUpReOmwmBx8fWv/w7f/tFZjt+ygx9+79tM+DN89YHDvPrsL7jw+vN86f79CKHy2H//G+bC
      RX7v3/4JdXKJ5TPPMHZoB0uBEG/+6ilefPMsn3roYV7+l38ikcvgrK1HsjZwR4+d5984x5F7
      f4Oj+3s/sq3aHEBjXSmXi9g9zTRYZaKZAkc+8VkO9tQSTuVBiTEbUNi7rQV/MA7ALXcd49TL
      vwKghIFbdvcwM7uEu7mXz99ziCOf+RKWcpqz50e44/DthJcXr8s+TQAa64Okx+mwIdQSI+fP
      EErlMVlsnHv1Zwz5czTXebDZG+hs0DG2EMZhNYAkY3M10tngBqORhelxRqeXsJhNOBx2jGYb
      Jr0Op9PJvj07eOedMzic7uszs1pu0EQigcvlqkZRWwJVVVFVFb1eG4VeolQqYTAYqlrmjfME
      UBUW5maYm19CUT+apuMhPzMLfjKZTIWNez+qqlIoFNa9nEvEwkGmp2dI565eZjGXplBWq2TV
      e8lms+t27aBvgZmZOQql9zpjbhwBlHNEcyoec5mhSR/L/gVGJ6YplYrMzU4zNjGNoqoszk6x
      4F8mGgkxMztPJhllZHSMXDbDm6fOoZbzvPCrXzG76N/oGlUUX3CZpqYGhgcHyWcSjIyMEE/n
      iEUjzM7MEovFmJ+bIZ/PUVYlluanmfcFN9rsirEcidNQ52JwcGS1zulk9AYSABAJ+hiZmKO2
      1oUsSST80ywuR4llytj1CksLM+R1LhprPYwMDeKprWNqep7erjYmphdo7+igp6uLlrY2Olub
      Nro6FSWfSTE5PorebAckEGVGhseZHBvC5vYyPzGKzuqmlAoRjwQJZfXkQj4yN4j3OhULMzY6
      hs1ds1pnWZJvLAE0tnZy4OBugvNzzPlidLU3oSoCi9WCTqdDkuXVsbenrhG33YJAoKoqIL17
      IXHptRsHi9PNwJ59KPkUk5NTtHV2YTLI2N211HkcmO1umuo8K2+WJAK+eYpISDdIM7hrm9i7
      /wDpaHC1zhOT0zfQJFgtMTY+gSoZ6OruIrG8REGVqfHWoqoCo6QiGS1EAwsIkwOb2YDL6SSf
      STC3tExndzf5bAaX00kqFiKaVeloaVg3c8vlMoVCAZvNtm5lXE5gaY5oIkNdUyt2vcricgxv
      TQ16HTidLpKJJA6Xk2ImgTA5iQfmyJT1dHW0IksffP1KsJ59ZG5qnExRpbW9E5QCTqeLdCLy
      rgDS6fS6rtZms1msVuu6XX+roSgK5XIZk8m00aZsGjaij6z64Ox2+7oXprlB36XaT4CtQrX7
      yA01B9DYPCTSeZQtMI/SVmE0Kk46V+Q//Lfnaaix8dDxAXZ01G20SWuiCUCj4jz1+jifuWMb
      u7rq+f7zF9Drxnjw+AAdDS4kqUoz6mtEE4BGRYmlcpwc8/F//N7HsJgM/Mcv38ngzDL/8NRp
      ZFmis8HNtrYaepprqPfY0Os2dhSuCUCjYggh+Olr43ziUA8W08qeHlmW2NPTwEB3PZFElrlg
      gonFKC+dneP2Xa3cc7B7Q23WBKBRMWKpPOemgvzl8V3v+5ssSdS5bdS5bRzqb2azHEXXBKBR
      EYQQPP7SMCeO9GEyfHC32ixzAc0NqlERAtE0k4tR7tzTvtGmfCg0AWhcNyt3/xE+f9cOdPLW
      6lIfyVohBOdPnSJfVpifHufc+SGKisrs5CjnLgxTVkoE/CEK6Sj+cLLSNmtsMqZ9MZajaW7Z
      3rzRpnxoPtIcIBqYJ5bKU8inieYkdnZ4GBufRmCgr8nApD+CSKQI+FPs2re/0jZrbCJUVfDo
      z8/y5Xv3bLhL86OwpgCKuQw5RcJlf+/mJKEUGJvx4zDLpFMpZL0Bg8lEIRPG4nZjNBkpJook
      AguYaxrQSxKKoqCqKuVyed0rtFUol8urG+K2Ms+fmqGl1kl3s/u667IRfWRNAZQLaX71/Euk
      sgU6+3dzx6E9GHQyAh29PZ3MTU4iDFaU5CSnzgfo2rGb2dFBTkcE23bvJlAs47ELZpZCdLfW
      Icuydv7111AUZUu3SSyV5xfvTPPn/+ZuDBWox0b0kTXPA6TCizzx5C9Q9Ra2d9YxHhZ89Qv3
      fuSCtEPx72Wr7wYVQvB3P3mHnZ31fGx/Z0WuuRF9ZE25mWwutm3rwe724q5r4dAdjmrapbHJ
      GZ4NEUnkuGuLuT1/nTVnLeG5QS7MRgkvjfPUi29XPVyFxualrKh89xfn+cr9e9FtwYnv5axp
      fU1zD2p8gTdOjnD44O5q2qSxiYmlcvynx17jQF8THQ1bf0i75hAok4iw/bZ7ufuW7Ztm2Vpj
      41CF4O2RJf7lhWE+d7SfI7vbb4h+saYAdHoDz/zLt5kd2cWuA3dw6+5t1bRLYxORzhV59Odn
      SWYK/K9fPkqt68Y5272mABy1LRy9fR+xjEp769Zb4dO4fhLpPM++M8XrQ4t86rZe7jnUfUPc
      9S9nTQH4x0+RNHXwwEELP3juNf7wtz66C1Rj6yCEIJzI8vSbEwxOL3P3vk7+4vc+hs1i3GjT
      1oU1BdDQNUDh1cd4bF7l+GcfrKZNGhtAsaRwcszHS2fniKVz3H9rLw8dH7imrc1bmTVrF1ma
      ZsfRz3Brq8zPTk/T1+qtpl0aVaCsqEwuRnnp3Cyj8xEGuur4zY/tpLvJg1ytaFgbzJUFkIvx
      ne//kGDJzul6B3fc94Uqm6WxXqgXhzivnJvnrZFF6t027trbwVfv34fZeGPf7a/ElWtscfOb
      X/oaHm8Nb79zht629QsRqLG+FEsKi6EkU74YU0tRZvxx9DqJI7vb+Y9fvhO33bzRJm4oV94L
      lFni//7+G7RISzT372Z4Gb7+xY9fV0E3+16gQDSN12nBoNcBldkLlCuUyeaLGA06dLKMTpZQ
      hMAXTnFhepmhmWWiyRzNtQ66mz30ttTQ2ejGbjFuyiHO5tkLZK5Bio6x5O7gaK2Zhayuqkbd
      SAgheGfUxw9fGOKRh4+tCuDDXkNVBUvhFOMLEWYDceaDCVK5InqdjEEno6gCRVURApq8dnZ3
      1/PwJ/fRWGPfkvv0q8WNEx16EyKE4Ok3JnhzeJE/e/AwrsuGG9fyBEhlCwzNhjg95mfKF6PG
      aWFnRy2dTW7a613UOC03lF9+8zwBAKGWOfvOm8gWB+66Njqaaqpp15ZnZcPYOeLpPP/b7965
      GifnahRLCkvhJGcmApyfCpItlNjRXsuR3W187VMrk9QbqcNXEiEEhZJCoVjGaTOt2U5CCPLF
      MulckWA0c5WFsLG3eXsiRF9tkNeG/fzRg/dfugSZZJzFQJSeni7yqSihZJHOtibS8TCRjEJH
      Sz2ZdA6b1UAiU8Lt3Jp73j8qmVyR/+cn79DgsfEnX7ztmoYgxZLCI//4Am67mX3bmviDzx6k
      wWPflGP1jUQIgSoE8VSexXCKxeUEc8EEi8tJ8qUyZUXFbTezt6eBA31NtNW7SGTyjM6FGZ2P
      MLEYoayoOCxGGmrsaw+B8qkQj37nMaKJFJ/+7a+xt/fSdggVvy+I121kcDyAoih01plIyW6i
      oWVa3TpKjibSy1EkJUlz7wBOi+GmGAIJIZhcivGtJ09y360rWwfW4kpDICHETX2HX6uPZPMl
      hmaWeWtkiaVwikKxjN1qpKXWSVu9k44GF631TpzWlVwLoXiWs5MBTo/7WQolcdvN9HfUsr29
      lr5WLw6rcbWd1z4TnE1TRk9zSwv57OVZE2VqPDbOnR+hp6eLxWiOukYnM2dmsdd6aag3c86X
      JOmbxVbXjNNiuCnOBCuq4PmT07x8foE/+OwBOhuvfkb2RjkTXEku7yNCwMkxH68PLeKPpOlr
      9XJ0oJWORjcWk/6KT9VLCV5qHCY+vr+Dj+/voFRWMejlK74PriKAUj5FffdePnfPLci6yz0X
      KhcujLLv0C3oKTE9FyAUyFPX1kIkuExAylBb04ip1IlOTRJJ5fE6zDf0meBUtsC3fnoag17m
      kYePYTVf2+GhrX4muNJc3kcUVSWWLvDpO/roafZ8JO8ZwAc175pDoERwjqd/+RoAfXtv49Cu
      npU/CJWZyQlyJYW6xlasujKhZIGO1kYyiQiRjEJ7cx2ZTB6bzUQimcXtctyQQyBFVXn1/Dw/
      fmWUz925nWN7O655CLPVzwSvB5vKC+T3+0inkjhrW9m5rfPdP0gyXdv63/Ne20Wb7e5a7Bcz
      19svhlNxuzb3WWL1oo9dJ8v8et8tKyqZXJGJpSi1TitelwWzceXx6wunePTnZ3FYTTzy8DE8
      DsvGVEDjuriyAPIhnvjlef7nP/0GgaGX+ednXuNrD9xVZdMqj6KoxDN5/OE0s8E4s4E4s/44
      uUIZl82E12WhxmnFqJdZCqUIxNKYjXoaPDaKJZVoKkexpKwIRcCX793D3t6Gm3riutW5sgB0
      ZqRCgumZaeYn5/DWb87oboqqUiwplBUVRRGUVZV8sUw4nsUfTeGPpAlE02RyJQoXXWROq4km
      r4OORhcf399Fx/0uTEY92XyJSDJHNJklWyhxdHc7zbUO9DoZSZJWw3mrQpDJlbCY9B95XKqx
      eVhzDpCMBDl5+hye5i727uxFvs673AeN74QQFMsKmVwJXyTFUihJMJahVFZXhymKqpIvrCxi
      pPNFiiUFo16HXiej08nodRIGvY56t40mr50mr4PGGjs2iwGTQY/JoNs0d2ttDvB+NmIOsOFb
      IRKZAqfH/bw5tEg4kcFqNtLsddBSt9J5jXodsiwhSxKyLGEx6bFbjNgtxi29MqoJ4P1sqknw
      ejO5FOUHvxwklS2yr7eRB4/voq3ehU6Wtmyn1th6bJgAahwWvnr/XlpqHchbLKa8xo3DxgnA
      aaHGqbkONTYW7darcVOjCUDjpkYTgMZNjSYAjZuayglACOamxzk/OEJZLRMMhClm4lqSPI1N
      TcUEoBRSxAs6ehusTPkiRCMxhsemqfVs7s1wGjc3FROAWi6jNxgwW8zkCwXCgQVKkgm9dqRP
      YxNTMQHorQ5yUT+nhmZob6yhtqmDNq+RWV+oUkVoaFSciu4FWr3Uxe3CF38gSdINeSDmetD2
      Ar2fDd0LlE6n33NWstJks9l1u/ZW5NJ5YO1M8LtsRB9ZFYDdbl/3wrQnwLtoT4ArU+0+oq0D
      aNzUaALQqDhCCEbmQsRSOap03OQjo8Xk0Kg40VSOv33iHWxmAzVOC3fv6+RAXxNGw+Y7QqoJ
      QKPi/PS1cT5/53Y+dqCTGV+cF8/O8sMXhhjoqueeQ9201Ts3zaEnTQAaFSWayjE0E+Kh4wPo
      ZJne1hp6W2vIFkqcGvPxD0+fRq+TufdQDwf7mzY8sIAmAI2KcSkc/Cdu6cb0a+mWrCYDd+7p
      4OjuDmYDMZ59Z5pUtsAnbunZIGtX0ASgUTFSuSJnxv385TeOr/keSYKuJg/fOHGgipatjSYA
      jYoghODp18e551D3NSXb2yxzAM0NqlERktkCb4/6uOfg2iHhNyOaADQqws/fmuT4ga5N6eq8
      GpoANK6bRDrP2yNLfPxA10ab8qFZUwCqqm76VTyNjUcIwfefH+TTd/Rdc16EzcSaAkiFFvjO
      d7/Lkz97Fn849l4xCMHi3CwlRSUeDjA5PY8qBNFlH1OzC6hCIRFPoZbyROPpatRDY4OYWIzi
      j6a4a2/HRpvykVhzum5x1tDsdTA8NkR8eRFrUz+/cd8RAHLJEINDEzjra5lcCNPTYGZqwU8y
      Fqfdo2MhFCcbjiNKSdq3765aZTSqS6ms8OgzZ/n6iQNbNhfx2jnCchk8zT08dOtRrFY7hWIR
      ACEUJuaC9HY2oRTyGG0OPLVOJi7mCKv1mjnnS5P0zWKta8Zu0t8UOcI+LDdCjrBn3pqkt8VD
      W52jIvXYiD6ypgDyyWVefuV1+trdBNR6vv7FlcUNUS4hS4LZuQUUm4tiMsbCfJqmznaCS4vM
      lWUa6tsxlToxShmCsQwNHtsNnSPso7KVc4RFEllePjfPIw8fq1gdNqKPrFmawWylnE9x8tQc
      hz/zldXXZYOZgd176O3dhsFkplTrIp4p0VDnpdamJ5lXqPc4cJtNWMxG0tl8VSqiUT2EEHzv
      2fN8/s7tOC6mJt2qrJ0pHh33f/5B+jsaMRnfP7s3W1YC2+psThovHmqy2F1YLh4ss1jMANht
      1gqbrLGRqELwy1MzZHJFbt/VutHmXDdrzlwkVH743f+Pl15+mfFZXzVt0tikZPMl/v4nJzkz
      7ufffvFWdDdAWPs1nwBWdyNHD+1g0bfM3oO3VdMmjU3IxGKU//fJkxw/2M19t/Qg3yDxntYU
      QGR+iPmcneMDJp555TRfe+BYNe3S2CSksgWeemOCc5MB/vgLt9Le4No0G9kqwZoCcHibSC68
      zLPLsOdjX6imTRobjBCCVLbIM29N8NbwEnft7eCRh49hMW29ld4PYu11gEKBz/z2V+ir1XFy
      OlpNmzQ2CFUVzAbivHxujvNTQT5+oIu//Mbxa9revFW5cs1yMb71rW/hLzro9hrovePTVTZL
      o1qUygoz/jhvDi8yOL1MjdPC7btaefD4wA3d8S+xRmhEQXx5iYxkRxQyNDU3o7vOSY8WGvG9
      bGRgLFUVzPhjvHphgXNTAZq8Du7Y1cqe7gYcVhMbNcTfPGlS82EefeIl+lx54oqE6t3Jlz95
      e1UN07h+FFUlGM0wH0zgj6RQVEG+uJJo3GIy0N3s4bc+tvOGHNtfK1cWgNGBObfEnLmLz93R
      xptLxiqbpXE1VFWQyhWYCySIJHNYTXosJgMWkwEhBBOLEUbnI/jCSTwOCx0NLjob3XQ0uql1
      WbGYtm6C8Uqz4Znib1Y+zBBIUVXmg0nGFsKML0SYCyQw6mXaGlzUu23ki2VyhRK5YhlVFfS2
      1LC9o5a2Ouf7ojNsZjbPEAhQSjme/tefEMuq3HficzR6tCCu10OhVMao113TnbdQLDPpi3Fu
      IsD4YoREukBTrZ3tbbXce0sPXU1ujBfj6Wh38utjTQH4x0+RsnTywCEzP3juNf7wt+6tpl1b
      GiEE8XSe8YUIYwsRZnwxMoUS/8vvHKXGceXk4KoqePn8HKfG/PjCKToaXOzb1sg9h7rxOMwb
      HkDqRmVNATR0D1B87Qc8NqdyzwMPVtOmLU04keVfXhhi2hdjV1c9/e1e7rulhzqPDfkqd2tF
      XVl8OnG4j64mt9bhq8SaAsgmExhsTpobmnBbL/cSCGYmx8lkc3ibu8iEFkjly2zfNcDC5Ajp
      gsrOgR2E/BE8domEYqGl7sYf+yfSeZ58fZyzEwE+d7Sfb3z24IfaLGbQy5w43LeOFt54CCFI
      54okMgWWYxkC0TS5Qpl9vQ20N7jWvIkoqkoslccfTq09Cc4lw7zy2pv4AwE6Bg5z9y07LxWL
      oqikYz4WgmkU2ciuNjuDMzF0RhN99QamkjLlWAxFLbFn/15kIJlM4nQ616kpqkOxpDA6H+aN
      oUWCsQxCFShCoKoqmVyJT9zSzfGDXZgMHzzxLJfLFItFrFZtu/glPqiPFEoKi8tJxhcjTCxG
      WVhOoJMl3HYzdW4bjTU2hIDhuRDBaIauJg87O2spllUiySzRZI54Ok8smcNuNdLsdVxlElws
      kC8Jamvrsb/n0IOEf26SeMnAju5mhuZjyDodSrmMwWJBp9OhKGUyyRh6mxMJCSFWIkyoqlrJ
      9qoaQ7MhXjo7y5QvzrZWL3fsaqXZa0evk5FlCVmSMBt1q3eca6mnqqqr/2mssFZ7RJM5fv72
      JCfH/HQ0utnW6uW+W3toqbVjvcIaxqdu76VYUpjyxRmdD2Mx6eltrsGz3YzLasLjMK+eYV5b
      AEqJcCSM3mBmm/2yu5QoMzWzSF1TE9EcyLkoZwZD9A3sYXZ0kLMxwY49AwRUgdcpMecL0dVS
      hyRJ6HQffVx7aWIpSxJOm+mK3g9VFRRKZczGyvi5Y6kc3/3FeZLZAifu6OMPHqjDoJMrcm0h
      BLIsX1eb3Ghc3h5CCBaWk/z09XHmAnGOH+zir/7wE5gM1+ZJs+h0DHTXM9Bdf9X3XXkIlIvw
      4qCfY4d2VczNdj0+3ky+yJOvjvH2qA+TQYeqClrrnfQ0ezAadCyFUvgjKULxLJl8iQaPjbYG
      Fz3NHrqbPTR57dfsgoQVIb1yfo5/fXWMzx7p58697RU//KHlCHs/l/cRRVH5x5+dYU9vIwe2
      Na6bU+DKAojP8I1vfovD+/oB2HHgCLft2XZdBa0lAFUVLIWTXJheJhBN09tSQ2ejm+balQzz
      L56d5ek3Jji2t4NP3t6LyaAnky+ysJxk2hejWFJorXPS5LVT57Zh0MtEkjkWggmmfDGmfTGW
      4xlMBj3dzW56W2qod9swm/SYDHrMRj2KqhJN5QnFMizHM5yfCuJxWPjKfXvxOMzXVe+10ATw
      fjZiIWwNAczyX396nq9/8R4A9AYjxmuY2F2NX6/cfDDBk6+NMeOPU+M0M9BVT43TylI4yaw/
      znIsQ1lV2d1Vz29+bBeuNYY9H4QQYtXFOO2LMrkUI5rMki8q5Itl8qUyElDjtFDvtlHvsdF+
      8emxnotMmgDez+YRgFomU1CwWSp34v/XKxeIpAklsnQ3u7GaDO/rbGVFJVcoYbds3O7E9UQT
      wPvZPFshZD02y/ruIWn02mn0rp2bWK+Tt3zIDY3Nz9Y/1q+hcR1oAtC4qdEEoHFTowlA46ZG
      E4DGTY0mAI2bmooKIBbyMzW3iBAKiUQKtZwnmshUsggNjYpSMWe/Wsoy7YvS7tYzH46TDcUR
      5STt/VqGGI3NS8WeAOVCDovdQW2th1g8Tcg3S1aYsZu2zqFsjZuPivVOg9lGNrHIvCLTUNe2
      miFmOZ6h3q0t92tsTiomAElvZue2DpJ5hQaPE7fJjMViIJ0pVKoIDY2Ks7oZrlgsruvppHQ6
      jd2+9t6fmw1FUSgWi1gsV44ScTOyEX1Ec4Nq3NSsDoGMxvUNf1goFDCb1+dwyVbkUjpQrU3e
      ZSP6iPYE0Kg4QgjeGFpgMZSkSpE3PzKaj1Kj4vjCKf75V0PYzEYcViMnDvexo6NuU+YV0wSg
      UXGeeHmEh44PcOuOFkbnwzz1+gT/47kL3LmnnYP9TdS7bZsmpqkmAI2KsrCcIBDNcKi/GUmS
      2NFRx/b2WoLRDG8ML/K3T7wDQrC/r4m79nZQ69rYwGCaADQqhhCCH788ygNH+9Hp3p1eSpJE
      o9fO5+/czueO9rMcz3Jm3M+MP6YJQOPGwRdJ4Y+mOdDXtOZ7JEmiwWPj/tt6q2jZ2mheII2K
      IITg8ReG+cJd21fDDm4Fto6lGpuaxVCSYGxl7L+VWFMAQlU3vQ9XY3MghOBHL43whbt2bBrv
      zrWy5hwgGZrnxz9/CW99C7fddit1HseWq5xGdZjyxYgmc+zva9xoUz40az4BLE4vbfUepkbO
      8fRP/pkfP/fGu38UgpELF8grKr65aS4MjVJWBYuzkwyOjKGoZULLEUq5BMFIshr10NggVFXw
      nWfO8jv37ql4AOFqcMUnQKmQx784j6W+ky/fchiLxUIm9+625nhoEf9yjObuNMFkiR0tNsYm
      ZyiXBT1eE1P+CEo8hW8pyY49+6pWGY3q88vTM7TVu+hrrdloUz4SVxRAIuzj/Og0AG/45ujc
      vpfd29oBEEqJyYUwjV47xXwOncmMyWYjOzWPraYGq81ELlAgEZjD4m3CIMsoioKqqqsbwDRW
      NsMpirKl2ySezvOzN8Z55OG7UBTluq+3EX3kigIo5NJ0dHVz5tRJAOrz7979hYDaGifz09OY
      61soJ4KcHwzSsW0H8+MjnItBx/adGIuduKxl5gMROpq8yLKMXq8tO1yOoihbuk1++OIIJ470
      43ZUZjFrI/rIFUtr7h6gQSlhQKWoqNTWe1f/JusNdHb10N7RiSTJiAYvZVVg0BuoPXiAsgoG
      gw739i5kSULRUgDdkAzPhgjFM/zBiYMbbcp1ccVZiyTLBCdP8tzbowghELzfHSrLKxlXZJ0e
      o8GAJHHxdz0SErIsw3WmRdLYnJQVle89e56v3Lf3PVsetiJrWm91uPFNDnH69GkWApFq2qSx
      iUllC/z1428x0FVPZ6N7o825btYccJWLBbbtuZVPHNmN3eWppk0amxAhBEMzIR79+Vnuu7WX
      4we6boh1oTUFYPW00FkXY3x8nNaeHXic2oH2m5ViWeHxF4cZng3x73/zdlrqtna+58tZUwCy
      LBgfPEumpKLaGunv3Fp7PDSun1JZ4fXBRX76+hiH+pv55tfu3lIb3a6FNQUQnh/H2tDJzlo7
      k75lYFcVzdLYSPLFMq+cm+O5k9Nsa/PyZw8ept6zeU5xVZIrC6CUpeToYOc2O5mwj3uO3FZl
      szSqjRCCqaUYr16Y58xEgIP9TfyHLx3Z8AMr682VBZAJ8uQrQxCf4d/98R9X2SSNaqEKwVwg
      zuuDC5weD1DvsXF0dxsPHR/AeI0Z2bc6VxaAwUopNIVaLvDoo49WJFG2xuZAVQWheIbXBxd4
      e2QJh9XE4d1tnDjcj8NqvCk6/eVcOU/wOrAROWA3M9XKE5zJFZkNxJn2x5nxx5gPJjAb9dyx
      q43bd7ZQ47Rsmk6/efIEs7Lp7c1XX8Jg9+BpaKenta6adml8AIqiEk5mSWWLmA16DHoZvV5G
      VQWzgTiDMyEmFiKUFJXORjfdzW7uvaWHjgYXZqN+03T6jWZNAfjG3mbYl6e7Zs9olmIAABCu
      SURBVJa3J0L80YP3V9OuGwpVFZwc87Grqw6b+cOHoFSFIJsvMbEYYXwhwow/znIsg8NmwmEx
      oqiCUlmhrKioqqCzyc1AVz2fO9qPy2belAGpNgtrCqC2fTu8/APens/wmd/+ajVtuqFIZgr8
      w9OnAdjT03DNnysUy4wtRDg/HWRkNkSprNLTUsP2jlru2NVGk9eOQa/ts7periiA2PIi50em
      6N0xQI8Ao6zt6PywCCE4MxHgn567wIkjfRzb23HVYYcQEIimODcZ5MxEgHAiQ3dzDXt7Gvj0
      7du0O/k6cUUBmG1OWluaSKezCMAgS6iq0L6AayRXKPHYLwdZXE7yZw8dprHmg7eRlMoK//Tc
      BXpbanjongFaah3aHf4aEEKgCkGprBKMZUhm8vS1etd04wohKCsqiUyBheXE2l4g/9ib/MOT
      J9nmhZPjQfYfOc7vnLgbUJkeHyObL+BuaCcdWiBbUOgf2M38+BDZosrO3bsILoXxOCCt2mmp
      d90UXiAhBOOLUf77U6c5PNDGiSN9a56TrZYXaCtxLX2kUFIIRFPMB5PMBeLMLyeIpfIA1Dot
      6PUyS+EUdS4r+7c10dtaQyZXZD6YYH45yVI4SamkYDUbaW9wrj0HMNvdGGQwGE3sPXCAbCp+
      8S8Snb39xIJzLEeXKeoc7N1u5/zoBAaLmz1tRsZ8YYqhING4jn37mlEvhlhZzww0G02xpPCT
      18Y4NxHgDx84uLpVeK063wxt8mFZqz1S2SJvjy7xyrl5UtkCDR4b7Q0uuprc3L2vA6/TgkGv
      Wx2hlBWVpVCS0xMBHn9hCI/DQnuDk2N722mtc2I1G1b3NK0pAHdzPw//toV4tkRbazOy/O5b
      56dGKOic9HV5GZqNIEnSSgwhSQIJEAJVVRDKjbVx6kqoqmB4NsRjvxxkoLuBR752DKM2dLlu
      hBCML0R49p1p5oIJbtnRwh989iANHtsHDsX1OpmORjcd13BeYU0BBMbe4r/9+E12b2slp+rY
      v73romUKS74wnjqJaNaJsZTkzEiU7QN7mBsb4vykys49uwgK8Lp0zPvCdLbUrZwe24JhM9ai
      rKicGvPx1OvjOKwmfv8zB+hpufbICLIs33Btcr1c3h6KonJmMsixfZ3s7qlft5ArawrAZLWh
      lyUsFgvGyw8qS3qOHDu2+s+6mr2rv++8LARKZ3crAI5KWltFhBCkckWGppd5Z8xHqaxi1Mur
      E9MZf5z2BhdfP3GQtnqntrBUYXQ6mS/ds/5J1q8ogGwqjmqu5567bgXAajatuyGV4Nfn82L1
      f5f+fdEDkC4QimcIJ7IEYxky+RI2kwGzSY/ZqKdUVjgzESCezjPQVc/H93dhtxgpKgqlkkKp
      rPKFu3ZQ57ZqHX+Lc0UB5NJxMmX9aqyXjYoRKoQgXywTjGWYDyYYX4igCoFOltHJEjpZoqwK
      Mrki6VyRbL60shoqBEKsTDRVwcWD/Ss/dToZl81EnctGndtKg8eO1awnX1TIF0vkC2WQJL5y
      317tzn4TcEUBeBsaeOOZ1xnotPPEL17jWF3nuhmgqCrheJYzEwEmFqMUSmVKZYViWSVXKKEo
      KvUeO+0NLnpba/DYzQix8jlFFeh1MjazAZvFiO3i7F6WJWRJevenJCFJ0socXevQGpdx5TlA
      LsqkP8rU4Ft85ctf5Acvnedgf2tFCw7FMzx3cpqzEwHMRj37tzXyiUPdWEx6DHodRr0Ok1GH
      3XLzbdHVqB5XFoC1mT1NEob9n0OUVY7dtr/iBaezRVpqHZw43Kd1co0NQzsPsEFoK8HvZyP6
      iOaE1rip0QSgcVOjCUDjpkYTgMZNjSYAjZuaimUjEELhwtmzFMoqO3YPEFwI4bar5HQeWus1
      74/G5qRiT4ByNoFsr2V/fyszvjDL/gXmgmla6rTOr7F5qZgAJFlGqCqKoqDT6bA7XajlIoqW
      a1hjE1MxAejNTsxqhuG5KD0ttbhrvOzc1saSllxDYxOjrQRvENpK8PvZ0Mhw6XS6Iqku1yKb
      za7btS9HCFHxfUXrcc1LKVIvTwu6VWxfr+v+eh+pRnusCsBuX/8MMJerWwiBEKLiRwIvzUE2
      +zWv9ATYKrZfOry+HgkQL+8j69Uel46jQgXdoB8W6eIe/UqzHl9KtTJdbhXbpSpl/6xGe2gL
      YRo3NbpvfvOb36xGQYVCAaWYZWJymmS2iN0Iw6NjKJIRAwVGRsdQdRZEJsLozCJlVcJpXzs7
      SSmfZmxsglA8jddlZXh4mExB4LabGRsZxOyqRVZyDA+PUlBlXI5rmGwKlZmpcRYX/djdXgLz
      k8z7w9TVeln2zRPNlHA5rIwOnmc5nMBZU4P+YogOpZRnfGyMQDhOjcfFxOgwsXQel9XA6Ng4
      oVgSj9vO2PAwqVwZl9OOopSYm57CF1jGXVPL/OQIvnCSuloPU6PDBGNp6rwuBs+eJhLL4Knz
      rn3HEirzM5PML/qwODyElmaYWwri9XqJLi8RjGfwOO3MTU2wFIzg9dYgX8MTOB4OMDUzS74M
      OiXL6PgUOrMdnZpneGKWhrpalpdmmVnwIXRG7Fbz6md9C9PMLSwim+ykIn6m5xZx1ngJzE+x
      sOjDaHMRDcwzM+/DU1tHuVggGg0xOzOPzVVDcGGaeX+IWq+XhekJFoMRvF4PE8PnWQ7HcXo8
      6K8yhPYvzKyUb7STjviZml0pPxsPMR+M4vW4qvsE0Jts7Ny5k0QowOjEFP07d7Psm2N8YoYd
      A3sILs6wtBjA7a2hoe7qIUaEbKB/x05KiSgTUxM0d+8gEfFTKBawWw3kioKZyUk6+3cRCSxe
      m4FC0NTeTXeTg+npGeJFA101eqb8ccw2J5l0AlHKEkkWaWppwXh5wjhJpqdvByYly9zsOOba
      DsjFSZegb8dOKCSYHR/F095PIRkiXxagqrR199Po1DM3M05G56XeVGBycpyytQmXlCEQDhHL
      6Wlua/nA8Wp9Swe9rTXMzs0RySj0NDqYXAphtLnJpWKUcglSRT3NLj0LoeQ1NYnF4WHH9u0s
      +5eYml1k18AuFmamKCkSMitOE59/mZraWmo9780e6a1voa+7jcVFH77lKDt725icmqW+uY2e
      jiYWl+YJRjL0d9UzOb3yHTU1NNLd7GJmZpZoTqa71szY1AzJspFWl8xcIEQ4UVhp/w+Iv1RT
      30x/dzuLi0ssLUfZ2dfO5OQsssFCOZ8GSlUWgCw4c+odWnv6EEgYdCvzAEVaOeCOBN07duAw
      6jh77vxVr2Uw6Bk9fxpXczsoKmaDDr0ko7PYMBlWGqasgEEvI11rTFNZRzwwz3ggT2+zC73J
      iNVqIZsv4bDbkAD0FgZ29hKaHyMYz1/2UT2z4xcQtjqsssBsNmHU61ElmYnBM5hrWtEjsJgN
      GPUSZUWArGd5YZxgVk+zU4/JasVqtRCPxTFbrVgtRnKqjd3b21kYO08sd5UocpJMKuxjZCFB
      X3s9OoMBs9lMoVDC6bCDBIpSRK83YzKbKBYK19Qkklrk1Kkz9PRtR1yM2yNJArvDwaWbb//O
      nRglhfNDo+/5bC4Z4dzoHDv6upFkCZ3BhKKUSEWXGZ7209/bgiyZ0ButqKUcAMt+H+P+DL0t
      HgwmIxarhVQqhdFowmIxky9JDOzcRnhxAn80c1Xb86koZ0dm2N7fs1K+3oiilHA4nSsB3Kot
      gIkLZ1CNdrKpJHUuG+cHhxA6E3UOC4NDQ0gGG9FQkFA4gl5/9VAsgalhIgUdpWyG+roahoYG
      ySpQSsWYnVtkdnqGmloXw4ODlDFck32ilOX00BQ2k0xRMpMJLXFmZJ72egcz01MsLiwQiUbx
      +QKkcyWMhnebLx1aYGY5A6U8dm89s2ODBBM5SuFZ/CmFcj5LTUMdYxfOE80IrEYZinHOjS2t
      RN+21xOdHWZ4JsjOXTvxT15gfCGOx1zGHwiSKwmM+qtEl1YKnLowit2sJ1eWKCTCnBuZprne
      w+z0BEuLS2RKRlKxBUYml2iovbbk5+dOn8LicJJKJnGa9QwODWK0uAgHl1haXGJ+KUAo4Ccc
      iWI0vvc7O3X6LE67hWQqg6wUuTA4jLe2gdNnz+GwmkimBWopyuDgMLWNK2fOQ8kENpOOAkay
      ET9nhmfZ1ttDMrTAhYklGtwmfL4AqWwJk+Hqz8RTp8/gdFhJpdLISokLQ8N46xpYnJ1iaXGJ
      5UipugthDrsdRVVXvQiXu7ne/V1QLivo9VfPYiJUlbKiABJ6gw61rCDJK59XLr2uXylD1umu
      abwrhEAplxGATqcHVsKq6GT5std1CKECErJOh7T6WZVyeWVIoNfrUVUFJBkZ3rVTr0NVVuxU
      VYVCIb/aaXR6PagqAgmdTkZVlJXfZWmlPpKM7io5eoUQKEoZId71dFwKIXPp9RV7xXve80Eo
      ioKqqkgXy7/0PamqgqqKlddlibKqote9NyJzuVy+6OrWIUugqAKd/mJbXrRHZuV1vV5HIpHA
      brOt2H2xL6gXbRWqsvpdqKryvva/Eu8vX0Wn16OUSyvlyzptJXij0FaC3492JlhDo8poAtC4
      qbkpBSCESrFYRNuofREhKJWKKDdhroItK4CJU69wfmaZwTd/xfRy+kN99vQLT/H33/sJKvDM
      jx7l//rP/4XHf/bie2Kgzg+9zrmZcIWtXj/K+ST/+tSzlLIRfv7L1z7UZ0uFGH/153/BtD9B
      YnGIR/78L/nrv/s2kdS7rlKhlHj6mWcqbfb6Icr85ImfUCrlePqZ51hrprthe4Gul57d+/nW
      P/4PTDY3X+xa5q/+z7/F3tDNicO9/Oinz9O++wjlpXPEVRu/+7WvMvTyT/nV2yNs23eEked/
      hqH7TgSQypb4+h/9Kc989++Z8ffyi8cfp2RtoLE8w9v+l1FP3M3Pn3+Rlt59fOU3Nm+qWL3Z
      gTHn53s/fIq7P/kAP/jHv2M6kORLX/t9Xn7qMZaSEl84NsATL53jUyd+g756ib/5+0eRLB7u
      GKhjfjmJoqqU8yn2HfsMh1sVnn3xdWpKft4emuG+ez/OEz/6EQa7l/lzr7Kchj/60z/Gbbk2
      F3PVkfQ0u+B73/s+e45+imce/w7nJpb4zEO/z9grP2J4PsHDD35y6z4BZKOd/loT2w4eYWb4
      LE3bD2I1QjyR5sChQ4T8S5SEni8//LtYdYLRKT9/8j/9OyLzExy89S4eevDzq+qXJAmjUU86
      Fqd9+x7KmRgDe/bw2d/6CuGpUQZuPYKe/FXt2Xgk7vn0/SyHC3S4ZBZiOW7d24dvaQFnQw92
      fYlMrsChY59mb18LvvFBDt3/EIc6PLi7d3DX3Z9ie5t39WpGowmhlFH1Fna2eyk7Wjh89ChH
      dzWTKJnY3VtPJFXcwPp+MIfuOk4gmOJAXxPjc0scPXyAsG8Wvb2JthoDoXh+6woAoKG5g3qP
      g217byM6dZZcWSKXTnB+aASbw0FDUysmvQxIHNrXz9/85/9K18B+nG7P6jYGq0HiW3/7Xyh6
      eqgzlRi6cAGd0UJj13Zee+oxmnftZ+zUWyjy5s+RoDc72dHbjs5kp7+lhsHJRWxmPePDg+SF
      DqvNRYN3xc3YPnALwy/+iKFImY66GjyelVQmOpONky88yaM/fol77r6DpblJliJp7FYzplKS
      10cCNDolpn0xLIbNnQpKNpjZ2d+DDOzb0cvJs2M4nVZmJsaIZctYrVZtHWCj0NYB3o+2DqCh
      UWX+fzh2irkSy2ZMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='EDA-Housing Constructions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EDA-Office Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EDA-Weekly Earnings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HPI values' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='HPI vs Benchmark' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HPI vs Benchmark (2)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='HPI vs Benchmark (3)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heatmap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='House Prices vs Earnings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='House Prices vs Earnings (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='House Prices vs Earnings (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Insights' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Notable Events' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Notable Events - Earnings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Notable Events - Earnings (2)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Notable Events - Housing Starts' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Notable Events - Housing Starts (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regression' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trends' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
